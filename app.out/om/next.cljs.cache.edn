;; Analyzed by ClojureScript 1.7.170
{:use-macros {defui om.next}, :excludes #{var? key replace force}, :name om.next, :imports {Console goog.debug.Console}, :requires {glog goog.log, gstring goog.string, om.next.cache om.next.cache, clojure.zip clojure.zip, p om.next.protocols, om.next.impl.parser om.next.impl.parser, goog.string goog.string, gobj goog.object, goog.object goog.object, walk clojure.walk, goog.log goog.log, util om.util, om.next.protocols om.next.protocols, om.tempid om.tempid, c om.next.cache, parser om.next.impl.parser, transit om.transit, zip clojure.zip, clojure.walk clojure.walk, om.transit om.transit, tempid om.tempid, om.util om.util, Console goog.debug.Console}, :uses nil, :defs {get-props {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 342, :column 8, :end-line 342, :end-column 17, :private true, :arglists (quote ([x]))}, :private true, :name om.next/get-props, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 342, :end-line 342, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, tag {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 250, :column 7, :end-line 250, :end-column 10, :arglists (quote ([x class]))}, :name om.next/tag, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 10, :method-params ([x class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 250, :end-line 250, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x class]))}, db->tree {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1170, :column 7, :end-line 1170, :end-column 15, :arglists (quote ([query data refs] [query data refs map-ident] [query data refs map-ident idents-seen])), :doc "Given a query, some data in the default database format, and the entire\n   application state in the default database format, return the tree where all\n   ident links have been replaced with their original node values.", :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([query data refs] [query data refs map-ident] [query data refs map-ident idents-seen]), :arglists ([query data refs] [query data refs map-ident] [query data refs map-ident idents-seen]), :arglists-meta (nil nil nil)}}, :name om.next/db->tree, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([query data refs] [query data refs map-ident] [query data refs map-ident idents-seen]), :arglists ([query data refs] [query data refs map-ident] [query data refs map-ident idents-seen]), :arglists-meta (nil nil nil)}, :method-params ([query data refs] [query data refs map-ident] [query data refs map-ident idents-seen]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 1170, :end-line 1170, :max-fixed-arity 5, :fn-var true, :arglists ([query data refs] [query data refs map-ident] [query data refs map-ident idents-seen]), :doc "Given a query, some data in the default database format, and the entire\n   application state in the default database format, return the tree where all\n   ident links have been replaced with their original node values."}, get-local-query-data {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 204, :column 8, :end-line 204, :end-column 28, :private true, :arglists (quote ([component]))}, :private true, :name om.next/get-local-query-data, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 28, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 204, :end-line 204, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, t {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 397, :column 8, :end-line 397, :end-column 9, :private true, :arglists (quote ([c])), :doc "Get basis t value for when the component last read its props from\n   the global state."}, :private true, :name om.next/t, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 9, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 397, :end-line 397, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c])), :doc "Get basis t value for when the component last read its props from\n   the global state."}, get-next-props {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 339, :column 8, :end-line 339, :end-column 22, :private true, :arglists (quote ([x]))}, :private true, :name om.next/get-next-props, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 22, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 339, :end-line 339, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, unwrap {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 266, :column 8, :end-line 266, :end-column 14, :private true, :arglists (quote ([om-props]))}, :private true, :name om.next/unwrap, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 14, :method-params ([om-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 266, :end-line 266, :max-fixed-arity 1, :fn-var true, :arglists (quote ([om-props]))}, query {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 180, :column 4, :end-line 180, :end-column 9, :protocol om.next/IQuery, :doc "Return the component's unbound query", :arglists (quote ([this]))}, :protocol om.next/IQuery, :name om.next/query, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 9, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 180, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the component's unbound query"}, query-template {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 71, :column 8, :end-line 71, :end-column 22, :private true, :arglists (quote ([query path]))}, :private true, :name om.next/query-template, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 22, :method-params ([query path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 2, :fn-var true, :arglists (quote ([query path]))}, move-to-key {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 59, :column 8, :end-line 59, :end-column 19, :private true, :arglists (quote ([loc k]))}, :private true, :name om.next/move-to-key, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 19, :method-params ([loc k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([loc k]))}, get-prop {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 322, :column 8, :end-line 322, :end-column 16, :private true, :arglists (quote ([c k])), :doc "PRIVATE: Do not use"}, :private true, :name om.next/get-prop, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 16, :method-params ([c k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 322, :end-line 322, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c k])), :doc "PRIVATE: Do not use"}, ->OmProps {:protocol-inline nil, :meta {:private true, :protocols #{}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 27, :column 20, :factory :positional, :line 256, :end-line 256, :arglists (quote ([props basis-t])), :skip-protocol-flag nil}, :private true, :protocols #{}, :name om.next/->OmProps, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 27, :method-params ([props basis-t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 256, :end-line 256, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props basis-t])), :skip-protocol-flag nil}, class-path->queries {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1017, :column 7, :end-line 1017, :end-column 26, :arglists (quote ([x y])), :doc "Given x (a reconciler or indexer) and y (a component or component class\n   path), return the queries for that path."}, :name om.next/class-path->queries, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 26, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1017, :end-line 1017, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y])), :doc "Given x (a reconciler or indexer) and y (a component or component class\n   path), return the queries for that path."}, default-merge {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1330, :column 7, :end-line 1330, :end-column 20, :arglists (quote ([reconciler state res]))}, :name om.next/default-merge, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 20, :method-params ([reconciler state res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1330, :end-line 1330, :max-fixed-arity 3, :fn-var true, :arglists (quote ([reconciler state res]))}, ITxIntercept {:meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 798, :column 14, :end-line 798, :end-column 26, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {tx-intercept [[c tx]]}}}, :protocol-symbol true, :name om.next/ITxIntercept, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 26, :column 1, :line 798, :protocol-info {:methods {tx-intercept [[c tx]]}}, :info nil, :end-line 798, :impls #{}, :doc nil, :jsdoc ("@interface")}, Ident {:meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 169, :column 14, :end-line 169, :end-column 19, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {ident [[this props]]}}}, :protocol-symbol true, :name om.next/Ident, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 19, :column 1, :line 169, :protocol-info {:methods {ident [[this props]]}}, :info nil, :end-line 169, :impls #{}, :doc nil, :jsdoc ("@interface")}, rewrite {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1233, :column 7, :end-line 1233, :end-column 14, :arglists (quote ([rewrite-map result]))}, :name om.next/rewrite, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 14, :method-params ([rewrite-map result]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1233, :end-line 1233, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rewrite-map result]))}, get-rendered-state {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 542, :column 7, :end-line 542, :end-column 25, :arglists (quote ([component])), :doc "Get the rendered state of component. om.next/get-state always returns the\n   up-to-date state."}, :name om.next/get-rendered-state, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 25, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 542, :end-line 542, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Get the rendered state of component. om.next/get-state always returns the\n   up-to-date state."}, join-value {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 112, :column 8, :end-line 112, :end-column 18, :private true, :arglists (quote ([join]))}, :private true, :name om.next/join-value, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 18, :method-params ([join]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([join]))}, react-type {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 423, :column 7, :end-line 423, :end-column 17, :arglists (quote ([x])), :doc "Returns the component type, regardless of whether the component has been\n   mounted"}, :name om.next/react-type, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 423, :end-line 423, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Returns the component type, regardless of whether the component has been\n   mounted"}, merge! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1337, :column 7, :end-line 1337, :end-column 13, :arglists (quote ([reconciler delta])), :doc "Merge a state delta into the application state. Affected components managed\n   by the reconciler will re-render."}, :name om.next/merge!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 13, :method-params ([reconciler delta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1337, :end-line 1337, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler delta])), :doc "Merge a state delta into the application state. Affected components managed\n   by the reconciler will re-render."}, -next-props {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 376, :column 7, :end-line 376, :end-column 18, :arglists (quote ([next-props component]))}, :name om.next/-next-props, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 18, :method-params ([next-props component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 376, :end-line 376, :max-fixed-arity 2, :fn-var true, :arglists (quote ([next-props component]))}, gather-sends {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 570, :column 7, :end-line 570, :end-column 19, :arglists (quote ([{:keys [parser], :as env} q remotes]))}, :name om.next/gather-sends, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 19, :method-params ([p__8421 q remotes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 570, :end-line 570, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [parser], :as env} q remotes]))}, set-query! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 601, :column 7, :end-line 601, :end-column 17, :arglists (quote ([x params&query] [x {:keys [params query]} reads])), :doc "Change the query of a component. Takes a map containing :params and/or\n   :query. :params should be a map of new bindings and :query should be a query\n   expression. Will schedule a re-render as well as remote re-sends if\n   necessary.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x params&query] [x {:keys [params query]} reads]), :arglists ([x params&query] [x {:keys [params query]} reads]), :arglists-meta (nil nil)}}, :name om.next/set-query!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x params&query] [x {:keys [params query]} reads]), :arglists ([x params&query] [x {:keys [params query]} reads]), :arglists-meta (nil nil)}, :method-params ([x params&query] [x {:keys [params query]} reads]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 601, :end-line 601, :max-fixed-arity 3, :fn-var true, :arglists ([x params&query] [x {:keys [params query]} reads]), :doc "Change the query of a component. Takes a map containing :params and/or\n   :query. :params should be a map of new bindings and :query should be a query\n   expression. Will schedule a re-render as well as remote re-sends if\n   necessary."}, ref->any {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1005, :column 7, :end-line 1005, :end-column 15, :arglists (quote ([x ref])), :doc "Get any component from the indexer that matches the ref."}, :name om.next/ref->any, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 15, :method-params ([x ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1005, :end-line 1005, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x ref])), :doc "Get any component from the indexer that matches the ref."}, get-component-query {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 218, :column 8, :end-line 218, :end-column 27, :private true, :arglists (quote ([c]))}, :private true, :name om.next/get-component-query, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 27, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 218, :end-line 218, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, clear-prev-props! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 394, :column 8, :end-line 394, :end-column 25, :private true, :arglists (quote ([c]))}, :private true, :name om.next/clear-prev-props!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 25, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 394, :end-line 394, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, props {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 458, :column 7, :end-line 458, :end-column 12, :arglists (quote ([component])), :doc "Return a components props."}, :name om.next/props, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 12, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 458, :end-line 458, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Return a components props."}, -prev-props {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 368, :column 7, :end-line 368, :end-column 18, :arglists (quote ([prev-props component]))}, :name om.next/-prev-props, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 18, :method-params ([prev-props component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 368, :end-line 368, :max-fixed-arity 2, :fn-var true, :arglists (quote ([prev-props component]))}, get-unbound-query {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 208, :column 7, :end-line 208, :end-column 24, :arglists (quote ([component])), :doc "Return the unbound query for a component."}, :name om.next/get-unbound-query, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 24, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 208, :end-line 208, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Return the unbound query for a component."}, update-component! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 693, :column 8, :end-line 693, :end-column 25, :private true, :arglists (quote ([c next-props]))}, :private true, :name om.next/update-component!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 25, :method-params ([c next-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 693, :end-line 693, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c next-props]))}, path {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 429, :column 8, :end-line 429, :end-column 12, :private true, :arglists (quote ([c])), :doc "Returns the component's Om data path."}, :private true, :name om.next/path, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 12, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 429, :end-line 429, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c])), :doc "Returns the component's Om data path."}, to-class {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1058, :column 7, :end-line 1058, :end-column 15, :arglists (quote ([class]))}, :name om.next/to-class, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 15, :method-params ([class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1058, :end-line 1058, :max-fixed-arity 1, :fn-var true, :arglists (quote ([class]))}, tx-intercept {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 799, :column 4, :end-line 799, :end-column 16, :protocol om.next/ITxIntercept, :doc "An optional protocol that component may implement to intercept child\n     transactions.", :arglists (quote ([c tx]))}, :protocol om.next/ITxIntercept, :name om.next/tx-intercept, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 16, :method-params ([c tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 798, :end-line 799, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c tx])), :doc "An optional protocol that component may implement to intercept child\n     transactions."}, join-entry {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 107, :column 8, :end-line 107, :end-column 18, :private true, :arglists (quote ([node]))}, :private true, :name om.next/join-entry, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 18, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, children {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 688, :column 7, :end-line 688, :end-column 15, :arglists (quote ([component])), :doc "Returns the component's children."}, :name om.next/children, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 15, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 688, :end-line 688, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Returns the component's children."}, default-merge-ident {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1508, :column 8, :end-line 1508, :end-column 27, :private true, :arglists (quote ([_ tree ref props]))}, :private true, :name om.next/default-merge-ident, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 27, :method-params ([_ tree ref props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1508, :end-line 1508, :max-fixed-arity 4, :fn-var true, :arglists (quote ([_ tree ref props]))}, app-root {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1631, :column 7, :end-line 1631, :end-column 15, :arglists (quote ([reconciler])), :doc "Return the application's root component."}, :name om.next/app-root, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 15, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1631, :end-line 1631, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler])), :doc "Return the application's root component."}, -set-state! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 183, :column 4, :end-line 183, :end-column 15, :protocol om.next/ILocalState, :doc "Set the component's local state", :arglists (quote ([this new-state]))}, :protocol om.next/ILocalState, :name om.next/-set-state!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 15, :method-params ([this new-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 183, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this new-state])), :doc "Set the component's local state"}, iquery? {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 247, :column 7, :end-line 247, :end-column 14, :arglists (quote ([x]))}, :name om.next/iquery?, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 247, :end-line 247, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, var->keyword {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 192, :column 8, :end-line 192, :end-column 20, :private true, :arglists (quote ([x]))}, :private true, :name om.next/var->keyword, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 20, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 192, :end-line 192, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, update-props! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 451, :column 8, :end-line 451, :end-column 21, :private true, :arglists (quote ([c next-props]))}, :private true, :name om.next/update-props!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 21, :method-params ([c next-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 451, :end-line 451, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c next-props]))}, nil-props {:name om.next/nil-props, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 264, :column 1, :end-line 264, :end-column 25, :private true, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 264, :column 16, :end-line 264, :end-column 25, :private true}}, should-update? {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 698, :column 7, :end-line 698, :end-column 21, :arglists (quote ([c next-props] [c next-props next-state])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([c next-props] [c next-props next-state]), :arglists ([c next-props] [c next-props next-state]), :arglists-meta (nil nil)}}, :name om.next/should-update?, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([c next-props] [c next-props next-state]), :arglists ([c next-props] [c next-props next-state]), :arglists-meta (nil nil)}, :method-params ([c next-props] [c next-props next-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 698, :end-line 698, :max-fixed-arity 3, :fn-var true, :arglists ([c next-props] [c next-props next-state])}, get-ident {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 735, :column 7, :end-line 735, :end-column 16, :arglists (quote ([component])), :doc "Given a component return its ident"}, :name om.next/get-ident, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 16, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 735, :end-line 735, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Given a component return its ident"}, ast->query {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 885, :column 7, :end-line 885, :end-column 17, :arglists (quote ([query-ast]))}, :name om.next/ast->query, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 17, :method-params ([query-ast]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 885, :end-line 885, :max-fixed-arity 1, :fn-var true, :arglists (quote ([query-ast]))}, om-props {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 258, :column 8, :end-line 258, :end-column 16, :private true, :arglists (quote ([props basis-t]))}, :private true, :name om.next/om-props, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 16, :method-params ([props basis-t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 258, :end-line 258, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props basis-t]))}, instrument {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 447, :column 7, :end-line 447, :end-column 17, :arglists (quote ([component]))}, :name om.next/instrument, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 17, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 447, :end-line 447, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, om-props-basis {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 261, :column 8, :end-line 261, :end-column 22, :private true, :arglists (quote ([om-props]))}, :private true, :name om.next/om-props-basis, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 22, :method-params ([om-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 261, :end-line 261, :max-fixed-arity 1, :fn-var true, :arglists (quote ([om-props]))}, var? {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 188, :column 8, :end-line 188, :end-column 12, :private true, :arglists (quote ([x]))}, :private true, :name om.next/var?, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 188, :end-line 188, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, map->Reconciler {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1352, :column 12, :end-line 1352, :end-column 22, :internal-ctor true, :factory :map, :arglists (quote ([G__8769]))}, :name om.next/map->Reconciler, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 22, :method-params ([G__8769]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 1352, :end-line 1352, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__8769]))}, react-key {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 418, :column 7, :end-line 418, :end-column 16, :arglists (quote ([component])), :doc "Returns the components React key."}, :name om.next/react-key, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 16, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 418, :end-line 418, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Returns the components React key."}, set-state! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 498, :column 7, :end-line 498, :end-column 17, :arglists (quote ([component new-state])), :doc "Set the component local state of the component. Analogous to React's\n   setState."}, :name om.next/set-state!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 17, :method-params ([component new-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 498, :end-line 498, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component new-state])), :doc "Set the component local state of the component. Analogous to React's\n   setState."}, default-migrate {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1518, :column 8, :end-line 1518, :end-column 23, :private true, :arglists (quote ([pure query tempids id-key]))}, :private true, :name om.next/default-migrate, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 23, :method-params ([pure query tempids id-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1518, :end-line 1518, :max-fixed-arity 4, :fn-var true, :arglists (quote ([pure query tempids id-key]))}, tree->db {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1145, :column 7, :end-line 1145, :end-column 15, :arglists (quote ([x data] [x data merge-idents])), :doc "Given a Om component class or instance and a tree of data, use the component's\n   query to transform the tree into the default database format. All nodes that\n   can be mapped via Ident implementations wil be replaced with ident links. The\n   original node data will be moved into tables indexed by ident. If merge-idents\n   option is true, will return these tables in the result instead of as metadata.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x data] [x data merge-idents]), :arglists ([x data] [x data merge-idents]), :arglists-meta (nil nil)}}, :name om.next/tree->db, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x data] [x data merge-idents]), :arglists ([x data] [x data merge-idents]), :arglists-meta (nil nil)}, :method-params ([x data] [x data merge-idents]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1145, :end-line 1145, :max-fixed-arity 3, :fn-var true, :arglists ([x data] [x data merge-idents]), :doc "Given a Om component class or instance and a tree of data, use the component's\n   query to transform the tree into the default database format. All nodes that\n   can be mapped via Ident implementations wil be replaced with ident links. The\n   original node data will be moved into tables indexed by ident. If merge-idents\n   option is true, will return these tables in the result instead of as metadata."}, from-history {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1637, :column 7, :end-line 1637, :end-column 19, :arglists (quote ([reconciler uuid])), :doc "Given a reconciler and UUID return the application state snapshost\n   from history associated with the UUID. The size of the reconciler history\n   may be configured by the :history option when constructing the reconciler."}, :name om.next/from-history, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 19, :method-params ([reconciler uuid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1637, :end-line 1637, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler uuid])), :doc "Given a reconciler and UUID return the application state snapshost\n   from history associated with the UUID. The size of the reconciler history\n   may be configured by the :history option when constructing the reconciler."}, default-ui->props {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1490, :column 8, :end-line 1490, :end-column 25, :private true, :arglists (quote ([{:keys [parser pathopt], :as env} c]))}, :private true, :name om.next/default-ui->props, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 25, :method-params ([p__8810 c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1490, :end-line 1490, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [parser pathopt], :as env} c]))}, to-env {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 803, :column 8, :end-line 803, :end-column 14, :private true, :arglists (quote ([x]))}, :private true, :name om.next/to-env, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 803, :end-line 803, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, process-roots {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1284, :column 7, :end-line 1284, :end-column 20, :arglists (quote ([query]))}, :name om.next/process-roots, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 20, :method-params ([query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1284, :end-line 1284, :max-fixed-arity 1, :fn-var true, :arglists (quote ([query]))}, parent {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 406, :column 8, :end-line 406, :end-column 14, :private true, :arglists (quote ([component])), :doc "Returns the parent Om component."}, :private true, :name om.next/parent, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 14, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 406, :end-line 406, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Returns the parent Om component."}, prev-props* {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 361, :column 8, :end-line 361, :end-column 19, :private true, :arglists (quote ([x y] [x y z])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x y] [x y z]), :arglists ([x y] [x y z]), :arglists-meta (nil nil)}}, :private true, :name om.next/prev-props*, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x y] [x y z]), :arglists ([x y] [x y z]), :arglists-meta (nil nil)}, :method-params ([x y] [x y z]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 361, :end-line 361, :max-fixed-arity 3, :fn-var true, :arglists ([x y] [x y z])}, replace {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 96, :column 8, :end-line 96, :end-column 15, :private true, :arglists (quote ([template new-query]))}, :private true, :name om.next/replace, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 15, :method-params ([template new-query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 2, :fn-var true, :arglists (quote ([template new-query]))}, computed {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 471, :column 7, :end-line 471, :end-column 15, :arglists (quote ([props computed-map])), :doc "Add computed properties to props. Note will replace any pre-existing\n   computed properties."}, :name om.next/computed, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 15, :method-params ([props computed-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 471, :end-line 471, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props computed-map])), :doc "Add computed properties to props. Note will replace any pre-existing\n   computed properties."}, force {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1662, :column 7, :end-line 1662, :end-column 12, :arglists (quote ([expr] [expr target])), :doc "Given a query expression return an equivalent query expression that can be\n   spliced into a transaction that will force a read of that key from the\n   specified remote target.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([expr] [expr target]), :arglists ([expr] [expr target]), :arglists-meta (nil nil)}}, :name om.next/force, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([expr] [expr target]), :arglists ([expr] [expr target]), :arglists-meta (nil nil)}, :method-params ([expr] [expr target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1662, :end-line 1662, :max-fixed-arity 2, :fn-var true, :arglists ([expr] [expr target]), :doc "Given a query expression return an equivalent query expression that can be\n   spliced into a transaction that will force a read of that key from the\n   specified remote target."}, ->Indexer {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 892, :column 12, :end-line 892, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([indexes]))}, :name om.next/->Indexer, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 19, :method-params ([indexes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 892, :end-line 892, :max-fixed-arity 1, :fn-var true, :arglists (quote ([indexes]))}, node->key {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 39, :column 8, :end-line 39, :end-column 17, :private true, :arglists (quote ([node]))}, :private true, :name om.next/node->key, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 17, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, focused-join {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 119, :column 8, :end-line 119, :end-column 20, :private true, :arglists (quote ([node ks]))}, :private true, :name om.next/focused-join, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 20, :method-params ([node ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 2, :fn-var true, :arglists (quote ([node ks]))}, union? {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 66, :column 16, :end-line 66, :end-column 22, :tag boolean, :arglists (quote ([node]))}, :name om.next/union?, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 22, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :ret-tag boolean, :end-line 66, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([node]))}, get-prev-props {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 336, :column 8, :end-line 336, :end-column 22, :private true, :arglists (quote ([x]))}, :private true, :name om.next/get-prev-props, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 22, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 336, :end-line 336, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, normalize* {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1071, :column 8, :end-line 1071, :end-column 18, :private true, :arglists (quote ([query data refs errs]))}, :private true, :name om.next/normalize*, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 18, :method-params ([query data refs errs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1071, :end-line 1071, :max-fixed-arity 4, :fn-var true, :arglists (quote ([query data refs errs]))}, props* {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 355, :column 8, :end-line 355, :end-column 14, :private true, :arglists (quote ([x y] [x y z])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x y] [x y z]), :arglists ([x y] [x y z]), :arglists-meta (nil nil)}}, :private true, :name om.next/props*, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x y] [x y z]), :arglists ([x y] [x y z]), :arglists-meta (nil nil)}, :method-params ([x y] [x y z]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 355, :end-line 355, :max-fixed-arity 3, :fn-var true, :arglists ([x y] [x y z])}, class->any {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1011, :column 7, :end-line 1011, :end-column 17, :arglists (quote ([x class])), :doc "Get any component from the indexer that matches the component class."}, :name om.next/class->any, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 17, :method-params ([x class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1011, :end-line 1011, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x class])), :doc "Get any component from the indexer that matches the component class."}, mounted? {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 678, :column 16, :end-line 678, :end-column 24, :tag boolean, :arglists (quote ([x])), :doc "Returns true if the component is mounted."}, :name om.next/mounted?, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 24, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 678, :ret-tag boolean, :end-line 678, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :doc "Returns true if the component is mounted."}, move-roots {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1241, :column 8, :end-line 1241, :end-column 18, :private true, :arglists (quote ([join result-roots path])), :doc "When given a join `{:join selector-vector}`, roots found so far, and a `path` prefix:\n  returns a (possibly empty) sequence of [re-rooted-join prefix] results.\n  Does NOT support sub-roots. Each re-rooted join will share only\n  one common parent (their common branching point).\n  "}, :private true, :name om.next/move-roots, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 18, :method-params ([join result-roots path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1241, :end-line 1241, :max-fixed-arity 3, :fn-var true, :arglists (quote ([join result-roots path])), :doc "When given a join `{:join selector-vector}`, roots found so far, and a `path` prefix:\n  returns a (possibly empty) sequence of [re-rooted-join prefix] results.\n  Does NOT support sub-roots. Each re-rooted join will share only\n  one common parent (their common branching point).\n  "}, focus-query {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 125, :column 7, :end-line 125, :end-column 18, :arglists (quote ([query path])), :doc "Given a query, focus it along the specified path.\n\n  Examples:\n    (om.next/focus-query [:foo :bar :baz] [:foo])\n    => [:foo]\n\n    (om.next/focus-query [{:foo [:bar :baz]} :woz] [:foo :bar])\n    => [{:foo [:bar]}]"}, :name om.next/focus-query, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 18, :method-params ([query path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 2, :fn-var true, :arglists (quote ([query path])), :doc "Given a query, focus it along the specified path.\n\n  Examples:\n    (om.next/focus-query [:foo :bar :baz] [:foo])\n    => [:foo]\n\n    (om.next/focus-query [{:foo [:bar :baz]} :woz] [:foo :bar])\n    => [{:foo [:bar]}]"}, -merge-pending-state! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 186, :column 4, :end-line 186, :end-column 25, :protocol om.next/ILocalState, :doc "Get the component's pending local state", :arglists (quote ([this]))}, :protocol om.next/ILocalState, :name om.next/-merge-pending-state!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 25, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 186, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Get the component's pending local state"}, default-merge-tree {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1512, :column 8, :end-line 1512, :end-column 26, :private true, :arglists (quote ([a b]))}, :private true, :name om.next/default-merge-tree, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 26, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1512, :end-line 1512, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, *reconciler* {:name om.next/*reconciler*, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 27, :column 1, :end-line 27, :end-column 49, :dynamic true, :private true, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 27, :column 37, :end-line 27, :end-column 49, :dynamic true, :private true}}, merge-novelty! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1318, :column 8, :end-line 1318, :end-column 22, :private true, :arglists (quote ([reconciler state res]))}, :private true, :name om.next/merge-novelty!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 22, :method-params ([reconciler state res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1318, :end-line 1318, :max-fixed-arity 3, :fn-var true, :arglists (quote ([reconciler state res]))}, IQuery {:meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 179, :column 14, :end-line 179, :end-column 20, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {query [[this]]}}}, :protocol-symbol true, :name om.next/IQuery, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 20, :column 1, :line 179, :protocol-info {:methods {query [[this]]}}, :info nil, :end-line 179, :impls #{}, :doc nil, :jsdoc ("@interface")}, get-computed {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 482, :column 7, :end-line 482, :end-column 19, :arglists (quote ([x] [x k-or-ks])), :doc "Return the computed properties on a component or its props.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x k-or-ks]), :arglists ([x] [x k-or-ks]), :arglists-meta (nil nil)}}, :name om.next/get-computed, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x k-or-ks]), :arglists ([x] [x k-or-ks]), :arglists-meta (nil nil)}, :method-params ([x] [x k-or-ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 482, :end-line 482, :max-fixed-arity 2, :fn-var true, :arglists ([x] [x k-or-ks]), :doc "Return the computed properties on a component or its props."}, get-state {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 512, :column 7, :end-line 512, :end-column 16, :arglists (quote ([component] [component k-or-ks])), :doc "Get a component's local state. May provide a single key or a sequential\n   collection of keys for indexed access into the component's local state.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component k-or-ks]), :arglists ([component] [component k-or-ks]), :arglists-meta (nil nil)}}, :name om.next/get-state, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component k-or-ks]), :arglists ([component] [component k-or-ks]), :arglists-meta (nil nil)}, :method-params ([component] [component k-or-ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 512, :end-line 512, :max-fixed-arity 2, :fn-var true, :arglists ([component] [component k-or-ks]), :doc "Get a component's local state. May provide a single key or a sequential\n   collection of keys for indexed access into the component's local state."}, *parent* {:name om.next/*parent*, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 28, :column 1, :end-line 28, :end-column 45, :dynamic true, :private true, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 28, :column 37, :end-line 28, :end-column 45, :dynamic true, :private true}}, update-state! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 526, :column 7, :end-line 526, :end-column 20, :arglists (quote ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest])), :doc "Update a component's local state. Similar to Clojure(Script)'s swap!", :top-fn {:variadic true, :max-fixed-arity 6, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3]), :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest]), :arglists-meta (nil nil nil nil nil nil)}}, :name om.next/update-state!, :variadic true, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 6, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3]), :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest]), :arglists-meta (nil nil nil nil nil nil)}, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3]), :protocol-impl nil, :arglists-meta (nil nil nil nil nil nil), :column 1, :line 526, :end-line 526, :max-fixed-arity 6, :fn-var true, :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest]), :doc "Update a component's local state. Similar to Clojure(Script)'s swap!"}, Indexer {:num-fields 1, :protocols #{cljs.core/IRecord om.next.protocols/IIndexer cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name om.next/Indexer, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 19, :type true, :column 12, :internal-ctor true, :line 892, :record true, :end-line 892, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, update-query! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 651, :column 7, :end-line 651, :end-column 20, :arglists (quote ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3 & arg-rest])), :doc "Update a component's query and query parameters with a function.", :top-fn {:variadic true, :max-fixed-arity 6, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2]), :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3 & arg-rest]), :arglists-meta (nil nil nil nil nil)}}, :name om.next/update-query!, :variadic true, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 6, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2]), :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3 & arg-rest]), :arglists-meta (nil nil nil nil nil)}, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2]), :protocol-impl nil, :arglists-meta (nil nil nil nil nil), :column 1, :line 651, :end-line 651, :max-fixed-arity 6, :fn-var true, :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3 & arg-rest]), :doc "Update a component's query and query parameters with a function."}, query-zip {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 47, :column 8, :end-line 47, :end-column 17, :private true, :arglists (quote ([root]))}, :private true, :name om.next/query-zip, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 17, :method-params ([root]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([root]))}, reconciler {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1534, :column 7, :end-line 1534, :end-column 17, :arglists (quote ([{:keys [state shared shared-fn parser indexer ui->props normalize send merge-sends remotes merge merge-tree merge-ident optimize history root-render root-unmount pathopt migrate id-key instrument], :or {root-render (fn* [p1__8866# p2__8867#] (js/ReactDOM.render p1__8866# p2__8867#)), pathopt false, merge-sends (fn* [p1__8864# p2__8865#] (merge-with into p1__8864# p2__8865#)), merge-ident default-merge-ident, remotes [:remote], migrate default-migrate, history 100, merge default-merge, ui->props default-ui->props, indexer om.next/indexer, root-unmount (fn* [p1__8868#] (js/ReactDOM.unmountComponentAtNode p1__8868#)), merge-tree default-merge-tree, optimize (fn [cs] (sort-by depth cs))}, :as config}])), :doc "Construct a reconciler from a configuration map.\n\n   Required parameters:\n     :state        - the application state. If IAtom value is not supplied the\n                     data will be normalized into the default database format\n                     using the root query. This can be disabled by explicitly\n                     setting the optional :normalize parameter to false.\n     :parser       - the parser to be used\n\n   Optional parameters:\n     :shared       - a map of global shared properties for the component tree.\n     :shared-fn    - a function to compute global shared properties from the root props.\n                     the result is merged with :shared.\n     :send         - required only if the parser will return a non-empty value when\n                     run against the supplied :remotes. send is a function of two\n                     arguments, the map of remote expressions keyed by remote target\n                     and a callback which should be invoked with the result from each\n                     remote target. Note this means the callback can be invoked\n                     multiple times to support parallel fetching and incremental\n                     loading if desired.\n     :normalize    - whether the state should be normalized. If true it is assumed\n                     all novelty introduced into the system will also need\n                     normalization.\n     :remotes      - a vector of keywords representing remote services which can\n                     evaluate query expressions. Defaults to [:remote]\n     :root-render  - the root render function. Defaults to ReactDOM.render\n     :root-unmount - the root unmount function. Defaults to\n                     ReactDOM.unmountComponentAtNode\n     :logger       - supply a goog.log compatible logger"}, :name om.next/reconciler, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 17, :method-params ([p__8869]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1534, :end-line 1534, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [state shared shared-fn parser indexer ui->props normalize send merge-sends remotes merge merge-tree merge-ident optimize history root-render root-unmount pathopt migrate id-key instrument], :or {root-render (fn* [p1__8866# p2__8867#] (js/ReactDOM.render p1__8866# p2__8867#)), pathopt false, merge-sends (fn* [p1__8864# p2__8865#] (merge-with into p1__8864# p2__8865#)), merge-ident default-merge-ident, remotes [:remote], migrate default-migrate, history 100, merge default-merge, ui->props default-ui->props, indexer om.next/indexer, root-unmount (fn* [p1__8868#] (js/ReactDOM.unmountComponentAtNode p1__8868#)), merge-tree default-merge-tree, optimize (fn [cs] (sort-by depth cs))}, :as config}])), :doc "Construct a reconciler from a configuration map.\n\n   Required parameters:\n     :state        - the application state. If IAtom value is not supplied the\n                     data will be normalized into the default database format\n                     using the root query. This can be disabled by explicitly\n                     setting the optional :normalize parameter to false.\n     :parser       - the parser to be used\n\n   Optional parameters:\n     :shared       - a map of global shared properties for the component tree.\n     :shared-fn    - a function to compute global shared properties from the root props.\n                     the result is merged with :shared.\n     :send         - required only if the parser will return a non-empty value when\n                     run against the supplied :remotes. send is a function of two\n                     arguments, the map of remote expressions keyed by remote target\n                     and a callback which should be invoked with the result from each\n                     remote target. Note this means the callback can be invoked\n                     multiple times to support parallel fetching and incremental\n                     loading if desired.\n     :normalize    - whether the state should be normalized. If true it is assumed\n                     all novelty introduced into the system will also need\n                     normalization.\n     :remotes      - a vector of keywords representing remote services which can\n                     evaluate query expressions. Defaults to [:remote]\n     :root-render  - the root render function. Defaults to ReactDOM.render\n     :root-unmount - the root unmount function. Defaults to\n                     ReactDOM.unmountComponentAtNode\n     :logger       - supply a goog.log compatible logger"}, *instrument* {:name om.next/*instrument*, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 30, :column 1, :end-line 30, :end-column 49, :dynamic true, :private true, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 30, :column 37, :end-line 30, :end-column 49, :dynamic true, :private true}}, params {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 173, :column 4, :end-line 173, :end-column 10, :protocol om.next/IQueryParams, :doc "Return the query parameters", :arglists (quote ([this]))}, :protocol om.next/IQueryParams, :name om.next/params, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 10, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 173, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the query parameters"}, *shared* {:name om.next/*shared*, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 29, :column 1, :end-line 29, :end-column 45, :dynamic true, :private true, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 29, :column 37, :end-line 29, :end-column 45, :dynamic true, :private true}}, get-indexer {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 993, :column 7, :end-line 993, :end-column 18, :arglists (quote ([reconciler])), :doc "PRIVATE: Get the indexer associated with the reconciler."}, :name om.next/get-indexer, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 18, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 993, :end-line 993, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler])), :doc "PRIVATE: Get the indexer associated with the reconciler."}, get-props* {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 327, :column 8, :end-line 327, :end-column 18, :private true, :arglists (quote ([x k]))}, :private true, :name om.next/get-props*, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 18, :method-params ([x k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 327, :end-line 327, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x k]))}, focus->path {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 148, :column 8, :end-line 148, :end-column 19, :private true, :arglists (quote ([focus] [focus bound] [focus bound path])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([focus] [focus bound] [focus bound path]), :arglists ([focus] [focus bound] [focus bound path]), :arglists-meta (nil nil nil)}}, :private true, :name om.next/focus->path, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([focus] [focus bound] [focus bound path]), :arglists ([focus] [focus bound] [focus bound path]), :arglists-meta (nil nil nil)}, :method-params ([focus] [focus bound] [focus bound path]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 3, :fn-var true, :arglists ([focus] [focus bound] [focus bound path])}, get-params {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 213, :column 7, :end-line 213, :end-column 17, :arglists (quote ([component])), :doc "Return the query params for a component."}, :name om.next/get-params, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 17, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 213, :end-line 213, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Return the query params for a component."}, bind-query {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 195, :column 8, :end-line 195, :end-column 18, :private true, :arglists (quote ([query params]))}, :private true, :name om.next/bind-query, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 18, :method-params ([query params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 195, :end-line 195, :max-fixed-arity 2, :fn-var true, :arglists (quote ([query params]))}, compute-react-key {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 269, :column 8, :end-line 269, :end-column 25, :private true, :arglists (quote ([cl props]))}, :private true, :name om.next/compute-react-key, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 25, :method-params ([cl props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 269, :end-line 269, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cl props]))}, set-prop! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 345, :column 8, :end-line 345, :end-column 17, :private true, :arglists (quote ([c k v])), :doc "PRIVATE: Do not use"}, :private true, :name om.next/set-prop!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 17, :method-params ([c k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 345, :end-line 345, :max-fixed-arity 3, :fn-var true, :arglists (quote ([c k v])), :doc "PRIVATE: Do not use"}, *raf* {:name om.next/*raf*, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 26, :column 1, :end-line 26, :end-column 28, :dynamic true, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 26, :column 23, :end-line 26, :end-column 28, :dynamic true}}, IQueryParams {:meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 172, :column 14, :end-line 172, :end-column 26, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {params [[this]]}}}, :protocol-symbol true, :name om.next/IQueryParams, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 26, :column 1, :line 172, :protocol-info {:methods {params [[this]]}}, :info nil, :end-line 172, :impls #{default}, :doc nil, :jsdoc ("@interface")}, join-key {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 101, :column 8, :end-line 101, :end-column 16, :private true, :arglists (quote ([node]))}, :private true, :name om.next/join-key, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 16, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, ident? {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1064, :column 16, :end-line 1064, :end-column 22, :tag boolean, :arglists (quote ([x])), :doc "Returns true if x is an ident."}, :name om.next/ident?, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 22, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1064, :ret-tag boolean, :end-line 1064, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :doc "Returns true if x is an ident."}, state {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 318, :column 8, :end-line 318, :end-column 13, :private true, :arglists (quote ([c]))}, :private true, :name om.next/state, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 13, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 318, :end-line 318, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, schedule-render! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 749, :column 7, :end-line 749, :end-column 23, :arglists (quote ([reconciler]))}, :name om.next/schedule-render!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 23, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 749, :end-line 749, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler]))}, react-set-state! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 561, :column 7, :end-line 561, :end-column 23, :arglists (quote ([component new-state] [component new-state cb])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([component new-state] [component new-state cb]), :arglists ([component new-state] [component new-state cb]), :arglists-meta (nil nil)}}, :name om.next/react-set-state!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 23, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([component new-state] [component new-state cb]), :arglists ([component new-state] [component new-state cb]), :arglists-meta (nil nil)}, :method-params ([component new-state] [component new-state cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 561, :end-line 561, :max-fixed-arity 3, :fn-var true, :arglists ([component new-state] [component new-state cb])}, class-path {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 707, :column 7, :end-line 707, :end-column 17, :arglists (quote ([c]))}, :name om.next/class-path, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 17, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 707, :end-line 707, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, transact! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 833, :column 7, :end-line 833, :end-column 16, :arglists (quote ([x tx] [r ref tx])), :doc "Given a reconciler or component run a transaction. tx is a parse expression\n   that should include mutations followed by any necessary read. The reads will\n   be used to trigger component re-rendering. If given a reconciler can be\n   optionally passed a ref as the second argument.\n\n   Example:\n\n     (om/transact! widget\n       '[(do/this!) (do/that!)\n         :read/this :read/that])", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x tx] [r ref tx]), :arglists ([x tx] [r ref tx]), :arglists-meta (nil nil)}}, :name om.next/transact!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x tx] [r ref tx]), :arglists ([x tx] [r ref tx]), :arglists-meta (nil nil)}, :method-params ([x tx] [r ref tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 833, :end-line 833, :max-fixed-arity 3, :fn-var true, :arglists ([x tx] [r ref tx]), :doc "Given a reconciler or component run a transaction. tx is a parse expression\n   that should include mutations followed by any necessary read. The reads will\n   be used to trigger component re-rendering. If given a reconciler can be\n   optionally passed a ref as the second argument.\n\n   Example:\n\n     (om/transact! widget\n       '[(do/this!) (do/that!)\n         :read/this :read/that])"}, query->ast {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 880, :column 7, :end-line 880, :end-column 17, :arglists (quote ([query-expr])), :doc "Given a query expression convert it into an AST."}, :name om.next/query->ast, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 17, :method-params ([query-expr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 880, :end-line 880, :max-fixed-arity 1, :fn-var true, :arglists (quote ([query-expr])), :doc "Given a query expression convert it into an AST."}, schedule-sends! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 761, :column 7, :end-line 761, :end-column 22, :arglists (quote ([reconciler]))}, :name om.next/schedule-sends!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 22, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 761, :end-line 761, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler]))}, basis-t {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 746, :column 8, :end-line 746, :end-column 15, :private true, :arglists (quote ([reconciler]))}, :private true, :name om.next/basis-t, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 15, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 746, :end-line 746, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler]))}, roots {:name om.next/roots, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 25, :column 1, :end-line 25, :end-column 21, :private true, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 25, :column 16, :end-line 25, :end-column 21, :private true}}, *depth* {:name om.next/*depth*, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 31, :column 1, :end-line 31, :end-column 44, :dynamic true, :private true, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 31, :column 37, :end-line 31, :end-column 44, :dynamic true, :private true}}, add-root! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 767, :column 7, :end-line 767, :end-column 16, :arglists (quote ([reconciler root-class target] [reconciler root-class target options])), :doc "Given a root component class and a target root DOM node, instantiate and\n   render the root class using the reconciler's :state property. The reconciler\n   will continue to observe changes to :state and keep the target node in sync.\n   Note a reconciler may have only one root. If invoked on a reconciler with an\n   existing root, the new root will replace the old one.", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([reconciler root-class target] [reconciler root-class target options]), :arglists ([reconciler root-class target] [reconciler root-class target options]), :arglists-meta (nil nil)}}, :name om.next/add-root!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([reconciler root-class target] [reconciler root-class target options]), :arglists ([reconciler root-class target] [reconciler root-class target options]), :arglists-meta (nil nil)}, :method-params ([reconciler root-class target] [reconciler root-class target options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 767, :end-line 767, :max-fixed-arity 4, :fn-var true, :arglists ([reconciler root-class target] [reconciler root-class target options]), :doc "Given a root component class and a target root DOM node, instantiate and\n   render the root class using the reconciler's :state property. The reconciler\n   will continue to observe changes to :state and keep the target node in sync.\n   Note a reconciler may have only one root. If invoked on a reconciler with an\n   existing root, the new root will replace the old one."}, reconciler? {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1619, :column 16, :end-line 1619, :end-column 27, :tag boolean, :arglists (quote ([x])), :doc "Returns true if x is a reconciler."}, :name om.next/reconciler?, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 27, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1619, :ret-tag boolean, :end-line 1619, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :doc "Returns true if x is a reconciler."}, get-query {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 227, :column 7, :end-line 227, :end-column 16, :arglists (quote ([x])), :doc "Return a IQuery/IParams instance bound query. Works for component classes\n   and component instances. See also om.next/full-query."}, :name om.next/get-query, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 227, :end-line 227, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Return a IQuery/IParams instance bound query. Works for component classes\n   and component instances. See also om.next/full-query."}, ref->components {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 999, :column 7, :end-line 999, :end-column 22, :arglists (quote ([x ref])), :doc "Return all components for a given ref."}, :name om.next/ref->components, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 22, :method-params ([x ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 999, :end-line 999, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x ref])), :doc "Return all components for a given ref."}, mock-root {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 788, :column 7, :end-line 788, :end-column 16, :arglists (quote ([reconciler root-class])), :doc "Create an Om Next root without an actual DOM target. Useful in devcards\n   testing context."}, :name om.next/mock-root, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 16, :method-params ([reconciler root-class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 788, :end-line 788, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler root-class])), :doc "Create an Om Next root without an actual DOM target. Useful in devcards\n   testing context."}, ->Reconciler {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1352, :column 12, :end-line 1352, :end-column 22, :internal-ctor true, :factory :positional, :arglists (quote ([config state]))}, :name om.next/->Reconciler, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 22, :method-params ([config state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 1352, :end-line 1352, :max-fixed-arity 2, :fn-var true, :arglists (quote ([config state]))}, merge-joins {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1258, :column 8, :end-line 1258, :end-column 19, :private true, :arglists (quote ([query])), :doc "Searches a query for duplicate joins and deep-merges them into a new query."}, :private true, :name om.next/merge-joins, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 19, :method-params ([query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1258, :end-line 1258, :max-fixed-arity 1, :fn-var true, :arglists (quote ([query])), :doc "Searches a query for duplicate joins and deep-merges them into a new query."}, Reconciler {:num-fields 2, :protocols #{cljs.core/IRecord om.next.protocols/IReconciler cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name om.next/Reconciler, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 22, :type true, :column 12, :internal-ctor true, :line 1352, :record true, :end-line 1352, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, OmProps {:private true, :num-fields 2, :protocols #{}, :name om.next/OmProps, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 27, :type true, :column 20, :line 256, :record false, :end-line 256, :skip-protocol-flag nil}, transact* {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 807, :column 7, :end-line 807, :end-column 16, :arglists (quote ([r c ref tx]))}, :name om.next/transact*, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 16, :method-params ([r c ref tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 807, :end-line 807, :max-fixed-arity 4, :fn-var true, :arglists (quote ([r c ref tx]))}, dispatch {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 875, :column 7, :end-line 875, :end-column 15, :arglists (quote ([_ key _])), :doc "Helper function for implementing :read and :mutate as multimethods. Use this\n   as the dispatch-fn."}, :name om.next/dispatch, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 15, :method-params ([_ key _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 875, :end-line 875, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ key _])), :doc "Helper function for implementing :read and :mutate as multimethods. Use this\n   as the dispatch-fn."}, app-state {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1624, :column 7, :end-line 1624, :end-column 16, :arglists (quote ([reconciler])), :doc "Return the reconciler's application state atom. Useful when the reconciler\n   was initialized via denormalized data."}, :name om.next/app-state, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 16, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1624, :end-line 1624, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler])), :doc "Return the reconciler's application state atom. Useful when the reconciler\n   was initialized via denormalized data."}, -get-state {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 184, :column 4, :end-line 184, :end-column 14, :protocol om.next/ILocalState, :doc "Get the component's local state", :arglists (quote ([this]))}, :protocol om.next/ILocalState, :name om.next/-get-state, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 184, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Get the component's local state"}, join? {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 115, :column 8, :end-line 115, :end-column 13, :private true, :arglists (quote ([x]))}, :private true, :name om.next/join?, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, factory {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 276, :column 7, :end-line 276, :end-column 14, :arglists (quote ([class] [class {:keys [validator keyfn], :as opts}])), :doc "Create a factory constructor from a component class created with\n   om.next/defui.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([class] [class {:keys [validator keyfn], :as opts}]), :arglists ([class] [class {:keys [validator keyfn], :as opts}]), :arglists-meta (nil nil)}}, :name om.next/factory, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([class] [class {:keys [validator keyfn], :as opts}]), :arglists ([class] [class {:keys [validator keyfn], :as opts}]), :arglists-meta (nil nil)}, :method-params ([class] [class {:keys [validator keyfn], :as opts}]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 276, :end-line 276, :max-fixed-arity 2, :fn-var true, :arglists ([class] [class {:keys [validator keyfn], :as opts}]), :doc "Create a factory constructor from a component class created with\n   om.next/defui."}, -get-rendered-state {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 185, :column 4, :end-line 185, :end-column 23, :protocol om.next/ILocalState, :doc "Get the component's rendered local state", :arglists (quote ([this]))}, :protocol om.next/ILocalState, :name om.next/-get-rendered-state, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 185, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Get the component's rendered local state"}, parser {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 868, :column 7, :end-line 868, :end-column 13, :arglists (quote ([{:keys [read mutate], :as opts}])), :doc "Create a parser. The argument is a map of two keys, :read and :mutate. Both\n   functions should have the signature (Env -> Key -> Params -> ParseResult)."}, :name om.next/parser, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 13, :method-params ([p__8508]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 868, :end-line 868, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [read mutate], :as opts}])), :doc "Create a parser. The argument is a map of two keys, :read and :mutate. Both\n   functions should have the signature (Env -> Key -> Params -> ParseResult)."}, merge-pending-state! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 551, :column 8, :end-line 551, :end-column 28, :private true, :arglists (quote ([c]))}, :private true, :name om.next/merge-pending-state!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 28, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 551, :end-line 551, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, merge-pending-props! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 383, :column 8, :end-line 383, :end-column 28, :private true, :arglists (quote ([c]))}, :private true, :name om.next/merge-pending-props!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 28, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 383, :end-line 383, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, nil-or-map? {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 36, :column 16, :end-line 36, :end-column 27, :tag boolean, :arglists (quote ([x]))}, :name om.next/nil-or-map?, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 27, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :ret-tag boolean, :end-line 36, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x]))}, writer {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1656, :column 7, :end-line 1656, :end-column 13, :arglists (quote ([] [opts])), :doc "Create a Om Next transit writer. This writer can handler the tempid type.\n   Can pass transit writer customization opts map.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}}, :name om.next/writer, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}, :method-params ([] [opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1656, :end-line 1656, :max-fixed-arity 1, :fn-var true, :arglists ([] [opts]), :doc "Create a Om Next transit writer. This writer can handler the tempid type.\n   Can pass transit writer customization opts map."}, *logger* {:name om.next/*logger*, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 17, :column 1, :end-line 17, :end-column 18, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 17, :column 10, :end-line 17, :end-column 18}}, merge-idents {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1306, :column 8, :end-line 1306, :end-column 20, :private true, :arglists (quote ([tree config refs]))}, :private true, :name om.next/merge-idents, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 20, :method-params ([tree config refs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1306, :end-line 1306, :max-fixed-arity 3, :fn-var true, :arglists (quote ([tree config refs]))}, sift-refs {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1164, :column 8, :end-line 1164, :end-column 17, :private true, :arglists (quote ([res]))}, :private true, :name om.next/sift-refs, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 17, :method-params ([res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1164, :end-line 1164, :max-fixed-arity 1, :fn-var true, :arglists (quote ([res]))}, indexer {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 985, :column 7, :end-line 985, :end-column 14, :arglists (quote ([])), :doc "Given a function (Component -> Ref), return an indexer."}, :name om.next/indexer, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 985, :end-line 985, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Given a function (Component -> Ref), return an indexer."}, subquery {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 723, :column 7, :end-line 723, :end-column 15, :arglists (quote ([x subquery-ref subquery-class])), :doc "Given a class or mounted component x and a ref to an instantiated component\n   or class that defines a subquery, pick the most specific subquery. If the\n   component is mounted subquery-ref will be used, subquery-class otherwise."}, :name om.next/subquery, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 15, :method-params ([x subquery-ref subquery-class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 723, :end-line 723, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x subquery-ref subquery-class])), :doc "Given a class or mounted component x and a ref to an instantiated component\n   or class that defines a subquery, pick the most specific subquery. If the\n   component is mounted subquery-ref will be used, subquery-class otherwise."}, reader {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1650, :column 7, :end-line 1650, :end-column 13, :arglists (quote ([] [opts])), :doc "Create a Om Next transit reader. This reader can handler the tempid type.\n   Can pass transit reader customization opts map.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}}, :name om.next/reader, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}, :method-params ([] [opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1650, :end-line 1650, :max-fixed-arity 1, :fn-var true, :arglists ([] [opts]), :doc "Create a Om Next transit reader. This reader can handler the tempid type.\n   Can pass transit reader customization opts map."}, component? {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 311, :column 16, :end-line 311, :end-column 26, :tag boolean, :arglists (quote ([x])), :doc "Returns true if the argument is an Om component."}, :name om.next/component?, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 26, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 311, :ret-tag boolean, :end-line 311, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :doc "Returns true if the argument is an Om component."}, remove-root! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 782, :column 7, :end-line 782, :end-column 19, :arglists (quote ([reconciler target])), :doc "Remove a root target (a DOM element) from a reconciler. The reconciler will\n   no longer attempt to reconcile application state with the specified root."}, :name om.next/remove-root!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 19, :method-params ([reconciler target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 782, :end-line 782, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler target])), :doc "Remove a root target (a DOM element) from a reconciler. The reconciler will\n   no longer attempt to reconcile application state with the specified root."}, ident {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 170, :column 4, :end-line 170, :end-column 9, :protocol om.next/Ident, :doc "Return the ref for this component", :arglists (quote ([this props]))}, :protocol om.next/Ident, :name om.next/ident, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 9, :method-params ([this props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 170, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this props])), :doc "Return the ref for this component"}, react-ref {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 683, :column 7, :end-line 683, :end-column 16, :arglists (quote ([component name])), :doc "Returns the component associated with a component's React ref."}, :name om.next/react-ref, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 16, :method-params ([component name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 683, :end-line 683, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component name])), :doc "Returns the component associated with a component's React ref."}, tempid {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1645, :column 7, :end-line 1645, :end-column 13, :arglists (quote ([] [id])), :doc "Return a temporary id.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [id]), :arglists ([] [id]), :arglists-meta (nil nil)}}, :name om.next/tempid, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [id]), :arglists ([] [id]), :arglists-meta (nil nil)}, :method-params ([] [id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1645, :end-line 1645, :max-fixed-arity 1, :fn-var true, :arglists ([] [id]), :doc "Return a temporary id."}, get-reconciler {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 350, :column 8, :end-line 350, :end-column 22, :private true, :arglists (quote ([c]))}, :private true, :name om.next/get-reconciler, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 22, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 350, :end-line 350, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, map->Indexer {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 892, :column 12, :end-line 892, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__8518]))}, :name om.next/map->Indexer, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 19, :method-params ([G__8518]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 892, :end-line 892, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__8518]))}, transform-reads {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 578, :column 7, :end-line 578, :end-column 22, :arglists (quote ([r tx]))}, :name om.next/transform-reads, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 22, :method-params ([r tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 578, :end-line 578, :max-fixed-arity 2, :fn-var true, :arglists (quote ([r tx]))}, shared {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 434, :column 7, :end-line 434, :end-column 13, :arglists (quote ([component] [component k-or-ks])), :doc "Return the global shared properties of the Om Next root. See :shared and\n   :shared-fn reconciler options.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component k-or-ks]), :arglists ([component] [component k-or-ks]), :arglists-meta (nil nil)}}, :name om.next/shared, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component k-or-ks]), :arglists ([component] [component k-or-ks]), :arglists-meta (nil nil)}, :method-params ([component] [component k-or-ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 434, :end-line 434, :max-fixed-arity 2, :fn-var true, :arglists ([component] [component k-or-ks]), :doc "Return the global shared properties of the Om Next root. See :shared and\n   :shared-fn reconciler options."}, depth {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 411, :column 8, :end-line 411, :end-column 13, :private true, :arglists (quote ([component])), :doc "PRIVATE: Returns the render depth (a integer) of the component relative to\n  the mount root."}, :private true, :name om.next/depth, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 13, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 411, :end-line 411, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "PRIVATE: Returns the render depth (a integer) of the component relative to\n  the mount root."}, ILocalState {:meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 182, :column 14, :end-line 182, :end-column 25, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-set-state! [[this new-state]], -get-state [[this]], -get-rendered-state [[this]], -merge-pending-state! [[this]]}}}, :protocol-symbol true, :name om.next/ILocalState, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 25, :column 1, :line 182, :protocol-info {:methods {-set-state! [[this new-state]], -get-state [[this]], -get-rendered-state [[this]], -merge-pending-state! [[this]]}}, :info nil, :end-line 182, :impls #{}, :doc nil, :jsdoc ("@interface")}, full-query {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :line 1026, :column 7, :end-line 1026, :end-column 17, :arglists (quote ([component] [component query])), :doc "Returns the absolute query for a given component, not relative like\n   om.next/get-query.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component query]), :arglists ([component] [component query]), :arglists-meta (nil nil)}}, :name om.next/full-query, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-eof1rz/app.out/om/next.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component query]), :arglists ([component] [component query]), :arglists-meta (nil nil)}, :method-params ([component] [component query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1026, :end-line 1026, :max-fixed-arity 2, :fn-var true, :arglists ([component] [component query]), :doc "Returns the absolute query for a given component, not relative like\n   om.next/get-query."}}, :require-macros {om.next om.next}, :cljs.analyzer/constants {:seen #{indexes :query-root x :remote :tempids :normalized query fn? :children :remove :pathopt vector? :id-key :instrument :react-key subquery-ref :pre :read :key implements? :merge-ident :om.next/queries reads :else props :merge-sends :ref :config :queue :validator :sends-queued :remotes subquery-class :migrate * map? :reconciler c' :params :history string? :type :last-ident :keyfn :state :queued-sends :prop->classes keyword? :query-by-join _ validator :component config :ref->components :om.next/tables :merge :om.next/no-queries :queued refs :class->components sel IQuery or :shared-fn reconciler params :factory :render :parser :keys :ui->props nil? :next not :root :class state component :logger :indexer :root-unmount :non-joins basis-t reconciler? :dispatch-key :om-path :send :om.next/not-found :shared :merge-tree :optimize c :t tx :om.next/computed :indexes :elements-seen :target quote :root-render :query class ... :rewrite opts :class-path->query :normalize component? root-class :mutate :om.next/skip :props :om/tag}, :order [:else * ... :config :state :om.next/queries :query :params :component nil? c' c props basis-t :react-key :om-path :validator :keyfn fn? class validator :props :children :class :factory :ref component? component :om.next/computed :parser :key :target or reconciler? x not params query reads vector? :root :history :logger :remotes :pre keyword? subquery-ref string? subquery-class reconciler root-class :shared :pathopt :reconciler tx implements? IQuery :read :mutate map? opts :dispatch-key :prop->classes :class-path->query :class->components :ref->components :om.next/not-found :indexes indexes :indexer :type :om.next/no-queries :om/tag :om.next/tables refs _ :last-ident :query-root :elements-seen :query-by-join :non-joins :rewrite :merge-ident :normalize :merge-tree :keys :next :tempids :merge :migrate :id-key :queue :queued-sends :merge-sends :sends-queued :send :queued :render :om.next/skip :ui->props :optimize :t :normalized :shared-fn :instrument :root-render sel :remove :root-unmount config state :remote quote]}, :doc nil}