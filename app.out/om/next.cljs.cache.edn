;; Analyzed by ClojureScript 1.7.170
{:use-macros {defui om.next}, :excludes #{var? key replace}, :name om.next, :imports {Console goog.debug.Console}, :requires {glog goog.log, gstring goog.string, om.next.cache om.next.cache, clojure.zip clojure.zip, p om.next.protocols, om.next.impl.parser om.next.impl.parser, goog.string goog.string, gobj goog.object, goog.object goog.object, walk clojure.walk, goog.log goog.log, om.next.protocols om.next.protocols, c om.next.cache, parser om.next.impl.parser, zip clojure.zip, clojure.walk clojure.walk, Console goog.debug.Console}, :uses nil, :defs {get-props {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 301, :column 8, :end-line 301, :end-column 17, :private true, :arglists (quote ([x]))}, :private true, :name om.next/get-props, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 301, :end-line 301, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, tag {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 215, :column 7, :end-line 215, :end-column 10, :arglists (quote ([x class]))}, :name om.next/tag, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 10, :method-params ([x class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 215, :end-line 215, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x class]))}, db->tree {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 1017, :column 7, :end-line 1017, :end-column 15, :arglists (quote ([selector data refs])), :doc "Given a selector, some data in the default database format, and the entire\n   application state in the default database format, return the tree where all\n   ident links have been replaced with their original node values."}, :name om.next/db->tree, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 15, :method-params ([selector data refs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1017, :end-line 1017, :max-fixed-arity 3, :fn-var true, :arglists (quote ([selector data refs])), :doc "Given a selector, some data in the default database format, and the entire\n   application state in the default database format, return the tree where all\n   ident links have been replaced with their original node values."}, get-local-query-data {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 169, :column 8, :end-line 169, :end-column 28, :private true, :arglists (quote ([component]))}, :private true, :name om.next/get-local-query-data, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 28, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, t {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 356, :column 8, :end-line 356, :end-column 9, :private true, :arglists (quote ([c])), :doc "Get basis t value for when the component last read its props from\n   the global state."}, :private true, :name om.next/t, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 9, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 356, :end-line 356, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c])), :doc "Get basis t value for when the component last read its props from\n   the global state."}, get-next-props {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 298, :column 8, :end-line 298, :end-column 22, :private true, :arglists (quote ([x]))}, :private true, :name om.next/get-next-props, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 22, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 298, :end-line 298, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, unwrap {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 231, :column 8, :end-line 231, :end-column 14, :private true, :arglists (quote ([om-props]))}, :private true, :name om.next/unwrap, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 14, :method-params ([om-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 231, :end-line 231, :max-fixed-arity 1, :fn-var true, :arglists (quote ([om-props]))}, query {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 145, :column 4, :end-line 145, :end-column 9, :protocol om.next/IQuery, :doc "Return the component's unbound query", :arglists (quote ([this]))}, :protocol om.next/IQuery, :name om.next/query, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 9, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 144, :end-line 145, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the component's unbound query"}, query-template {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 66, :column 8, :end-line 66, :end-column 22, :private true, :arglists (quote ([query path]))}, :private true, :name om.next/query-template, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 22, :method-params ([query path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 2, :fn-var true, :arglists (quote ([query path]))}, move-to-key {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 56, :column 8, :end-line 56, :end-column 19, :private true, :arglists (quote ([loc k]))}, :private true, :name om.next/move-to-key, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 19, :method-params ([loc k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([loc k]))}, get-prop {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 281, :column 8, :end-line 281, :end-column 16, :private true, :arglists (quote ([c k])), :doc "PRIVATE: Do not use"}, :private true, :name om.next/get-prop, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 16, :method-params ([c k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 281, :end-line 281, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c k])), :doc "PRIVATE: Do not use"}, ->OmProps {:protocol-inline nil, :meta {:private true, :protocols #{}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 27, :column 20, :factory :positional, :line 221, :end-line 221, :arglists (quote ([props basis-t])), :skip-protocol-flag nil}, :private true, :protocols #{}, :name om.next/->OmProps, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 27, :method-params ([props basis-t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 221, :end-line 221, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props basis-t])), :skip-protocol-flag nil}, default-merge {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 1063, :column 7, :end-line 1063, :end-column 20, :arglists (quote ([reconciler state res]))}, :name om.next/default-merge, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 20, :method-params ([reconciler state res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1063, :end-line 1063, :max-fixed-arity 3, :fn-var true, :arglists (quote ([reconciler state res]))}, class-path->query {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 890, :column 7, :end-line 890, :end-column 24, :arglists (quote ([x y]))}, :name om.next/class-path->query, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 24, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 890, :end-line 890, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, ITxIntercept {:meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 688, :column 14, :end-line 688, :end-column 26, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {tx-intercept [[c tx]]}}}, :protocol-symbol true, :name om.next/ITxIntercept, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 26, :column 1, :line 688, :protocol-info {:methods {tx-intercept [[c tx]]}}, :info nil, :end-line 688, :impls #{}, :doc nil, :jsdoc ("@interface")}, Ident {:meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 130, :column 14, :end-line 130, :end-column 19, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {ident [[this props]]}}}, :protocol-symbol true, :name om.next/Ident, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 19, :column 1, :line 130, :protocol-info {:methods {ident [[this props]]}}, :info nil, :end-line 130, :impls #{default}, :doc nil, :jsdoc ("@interface")}, get-rendered-state {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 504, :column 7, :end-line 504, :end-column 25, :arglists (quote ([component])), :doc "Get the rendered state of component. om.next/get-state always returns the\n   up-to-date state."}, :name om.next/get-rendered-state, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 25, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 504, :end-line 504, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Get the rendered state of component. om.next/get-state always returns the\n   up-to-date state."}, join-value {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 614, :column 8, :end-line 614, :end-column 18, :private true, :arglists (quote ([node]))}, :private true, :name om.next/join-value, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 18, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 614, :end-line 614, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, react-type {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 381, :column 7, :end-line 381, :end-column 17, :arglists (quote ([x])), :doc "Returns the component type, regardless of whether the component has been\n   mounted"}, :name om.next/react-type, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 381, :end-line 381, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Returns the component type, regardless of whether the component has been\n   mounted"}, merge! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 1067, :column 7, :end-line 1067, :end-column 13, :arglists (quote ([reconciler delta])), :doc "Merge a state delta into the application state. Affected components managed\n   by the reconciler will re-render."}, :name om.next/merge!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 13, :method-params ([reconciler delta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1067, :end-line 1067, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler delta])), :doc "Merge a state delta into the application state. Affected components managed\n   by the reconciler will re-render."}, -next-props {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 335, :column 7, :end-line 335, :end-column 18, :arglists (quote ([next-props component]))}, :name om.next/-next-props, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 18, :method-params ([next-props component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 335, :end-line 335, :max-fixed-arity 2, :fn-var true, :arglists (quote ([next-props component]))}, gather-sends {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 697, :column 7, :end-line 697, :end-column 19, :arglists (quote ([{:keys [parser], :as env} tx remotes]))}, :name om.next/gather-sends, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 19, :method-params ([p__8117 tx remotes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 697, :end-line 697, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [parser], :as env} tx remotes]))}, set-query! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 532, :column 7, :end-line 532, :end-column 17, :arglists (quote ([component new-query])), :doc "Change the query of a component. Will schedule a re-render."}, :name om.next/set-query!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 17, :method-params ([component new-query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 532, :end-line 532, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component new-query])), :doc "Change the query of a component. Will schedule a re-render."}, ref->any {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 878, :column 7, :end-line 878, :end-column 15, :arglists (quote ([x ref])), :doc "Get any component from the indexer that matches the ref."}, :name om.next/ref->any, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 15, :method-params ([x ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 878, :end-line 878, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x ref])), :doc "Get any component from the indexer that matches the ref."}, get-component-query {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 183, :column 8, :end-line 183, :end-column 27, :private true, :arglists (quote ([c]))}, :private true, :name om.next/get-component-query, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 27, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 183, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, clear-prev-props! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 353, :column 8, :end-line 353, :end-column 25, :private true, :arglists (quote ([c]))}, :private true, :name om.next/clear-prev-props!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 25, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 353, :end-line 353, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, props {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 416, :column 7, :end-line 416, :end-column 12, :arglists (quote ([component])), :doc "Return a components props."}, :name om.next/props, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 12, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 416, :end-line 416, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Return a components props."}, -prev-props {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 327, :column 7, :end-line 327, :end-column 18, :arglists (quote ([prev-props component]))}, :name om.next/-prev-props, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 18, :method-params ([prev-props component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 327, :end-line 327, :max-fixed-arity 2, :fn-var true, :arglists (quote ([prev-props component]))}, get-unbound-query {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 173, :column 7, :end-line 173, :end-column 24, :arglists (quote ([component])), :doc "Return the unbound query for a component."}, :name om.next/get-unbound-query, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 24, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 173, :end-line 173, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Return the unbound query for a component."}, update-component! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 585, :column 8, :end-line 585, :end-column 25, :private true, :arglists (quote ([c next-props]))}, :private true, :name om.next/update-component!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 25, :method-params ([c next-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 585, :end-line 585, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c next-props]))}, path {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 387, :column 8, :end-line 387, :end-column 12, :private true, :arglists (quote ([c])), :doc "Returns the component's Om data path."}, :private true, :name om.next/path, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 12, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 387, :end-line 387, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c])), :doc "Returns the component's Om data path."}, to-class {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 927, :column 7, :end-line 927, :end-column 15, :arglists (quote ([class]))}, :name om.next/to-class, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 15, :method-params ([class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 927, :end-line 927, :max-fixed-arity 1, :fn-var true, :arglists (quote ([class]))}, tx-intercept {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 689, :column 4, :end-line 689, :end-column 16, :protocol om.next/ITxIntercept, :doc "An optional protocol that component may implement to intercept child\n     transactions.", :arglists (quote ([c tx]))}, :protocol om.next/ITxIntercept, :name om.next/tx-intercept, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 16, :method-params ([c tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 688, :end-line 689, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c tx])), :doc "An optional protocol that component may implement to intercept child\n     transactions."}, children {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 580, :column 7, :end-line 580, :end-column 15, :arglists (quote ([component])), :doc "Returns the component's children."}, :name om.next/children, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 15, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 580, :end-line 580, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Returns the component's children."}, default-merge-ref {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 1224, :column 8, :end-line 1224, :end-column 25, :private true, :arglists (quote ([_ tree ref props]))}, :private true, :name om.next/default-merge-ref, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 25, :method-params ([_ tree ref props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1224, :end-line 1224, :max-fixed-arity 4, :fn-var true, :arglists (quote ([_ tree ref props]))}, -set-state! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 148, :column 4, :end-line 148, :end-column 15, :protocol om.next/ILocalState, :doc "Set the component's local state", :arglists (quote ([this new-state]))}, :protocol om.next/ILocalState, :name om.next/-set-state!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 15, :method-params ([this new-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 147, :end-line 148, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this new-state])), :doc "Set the component's local state"}, iquery? {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 212, :column 7, :end-line 212, :end-column 14, :arglists (quote ([x]))}, :name om.next/iquery?, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 212, :end-line 212, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, var->keyword {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 157, :column 8, :end-line 157, :end-column 20, :private true, :arglists (quote ([x]))}, :private true, :name om.next/var->keyword, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 20, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, update-props! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 409, :column 8, :end-line 409, :end-column 21, :private true, :arglists (quote ([c next-props]))}, :private true, :name om.next/update-props!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 21, :method-params ([c next-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 409, :end-line 409, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c next-props]))}, nil-props {:name om.next/nil-props, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 229, :column 1, :end-line 229, :end-column 25, :private true, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 229, :column 16, :end-line 229, :end-column 25, :private true}}, should-update? {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 590, :column 7, :end-line 590, :end-column 21, :arglists (quote ([c next-props] [c next-props next-state])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([c next-props] [c next-props next-state]), :arglists ([c next-props] [c next-props next-state]), :arglists-meta (nil nil)}}, :name om.next/should-update?, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([c next-props] [c next-props next-state]), :arglists ([c next-props] [c next-props next-state]), :arglists-meta (nil nil)}, :method-params ([c next-props] [c next-props next-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 590, :end-line 590, :max-fixed-arity 3, :fn-var true, :arglists ([c next-props] [c next-props next-state])}, get-ident {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 452, :column 7, :end-line 452, :end-column 16, :arglists (quote ([component])), :doc "Given a component return its ident"}, :name om.next/get-ident, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 16, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 452, :end-line 452, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Given a component return its ident"}, om-props {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 223, :column 8, :end-line 223, :end-column 16, :private true, :arglists (quote ([props basis-t]))}, :private true, :name om.next/om-props, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 16, :method-params ([props basis-t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 223, :end-line 223, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props basis-t]))}, instrument {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 405, :column 7, :end-line 405, :end-column 17, :arglists (quote ([component]))}, :name om.next/instrument, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 17, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 405, :end-line 405, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, om-props-basis {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 226, :column 8, :end-line 226, :end-column 22, :private true, :arglists (quote ([om-props]))}, :private true, :name om.next/om-props-basis, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 22, :method-params ([om-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 226, :end-line 226, :max-fixed-arity 1, :fn-var true, :arglists (quote ([om-props]))}, var? {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 153, :column 8, :end-line 153, :end-column 12, :private true, :arglists (quote ([x]))}, :private true, :name om.next/var?, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, map->Reconciler {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 1078, :column 12, :end-line 1078, :end-column 22, :internal-ctor true, :factory :map, :arglists (quote ([G__8347]))}, :name om.next/map->Reconciler, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 22, :method-params ([G__8347]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 1078, :end-line 1078, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__8347]))}, react-key {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 376, :column 7, :end-line 376, :end-column 16, :arglists (quote ([component])), :doc "Returns the components React key."}, :name om.next/react-key, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 16, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 376, :end-line 376, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Returns the components React key."}, set-state! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 460, :column 7, :end-line 460, :end-column 17, :arglists (quote ([component new-state])), :doc "Set the component local state of the component. Analogous to React's\n   setState."}, :name om.next/set-state!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 17, :method-params ([component new-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 460, :end-line 460, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component new-state])), :doc "Set the component local state of the component. Analogous to React's\n   setState."}, tree->db {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 988, :column 7, :end-line 988, :end-column 15, :arglists (quote ([x data] [x data merge-refs])), :doc "Given a Om component class or instance and a tree of data, use the component's\n   query to transform the tree into the default database format. All nodes that\n   can be mapped via Ident implementations wil be replaced with ident links. The\n   original node data will be moved into tables indexed by ident. If merge-ref\n   option is true, will return these tables in the result instead of as metadata.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x data] [x data merge-refs]), :arglists ([x data] [x data merge-refs]), :arglists-meta (nil nil)}}, :name om.next/tree->db, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x data] [x data merge-refs]), :arglists ([x data] [x data merge-refs]), :arglists-meta (nil nil)}, :method-params ([x data] [x data merge-refs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 988, :end-line 988, :max-fixed-arity 3, :fn-var true, :arglists ([x data] [x data merge-refs]), :doc "Given a Om component class or instance and a tree of data, use the component's\n   query to transform the tree into the default database format. All nodes that\n   can be mapped via Ident implementations wil be replaced with ident links. The\n   original node data will be moved into tables indexed by ident. If merge-ref\n   option is true, will return these tables in the result instead of as metadata."}, from-history {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 1319, :column 7, :end-line 1319, :end-column 19, :arglists (quote ([reconciler uuid])), :doc "Given a reconciler and UUID return the application state snapshost\n   from history associated with the UUID. The size of the reconciler history\n   may be configured by the :history option when constructing the reconciler."}, :name om.next/from-history, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 19, :method-params ([reconciler uuid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1319, :end-line 1319, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler uuid])), :doc "Given a reconciler and UUID return the application state snapshost\n   from history associated with the UUID. The size of the reconciler history\n   may be configured by the :history option when constructing the reconciler."}, default-ui->props {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 1210, :column 8, :end-line 1210, :end-column 25, :private true, :arglists (quote ([{:keys [parser], :as env} c]))}, :private true, :name om.next/default-ui->props, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 25, :method-params ([p__8395 c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1210, :end-line 1210, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [parser], :as env} c]))}, to-env {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 693, :column 8, :end-line 693, :end-column 14, :private true, :arglists (quote ([x]))}, :private true, :name om.next/to-env, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 693, :end-line 693, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, parent {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 365, :column 8, :end-line 365, :end-column 14, :private true, :arglists (quote ([component])), :doc "Returns the parent Om component."}, :private true, :name om.next/parent, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 14, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 365, :end-line 365, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Returns the parent Om component."}, merge-refs {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 1040, :column 8, :end-line 1040, :end-column 18, :private true, :arglists (quote ([tree config refs]))}, :private true, :name om.next/merge-refs, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 18, :method-params ([tree config refs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1040, :end-line 1040, :max-fixed-arity 3, :fn-var true, :arglists (quote ([tree config refs]))}, prev-props* {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 320, :column 8, :end-line 320, :end-column 19, :private true, :arglists (quote ([x y] [x y z])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x y] [x y z]), :arglists ([x y] [x y z]), :arglists-meta (nil nil)}}, :private true, :name om.next/prev-props*, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x y] [x y z]), :arglists ([x y] [x y z]), :arglists-meta (nil nil)}, :method-params ([x y] [x y z]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 320, :end-line 320, :max-fixed-arity 3, :fn-var true, :arglists ([x y] [x y z])}, replace {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 85, :column 8, :end-line 85, :end-column 15, :private true, :arglists (quote ([template new-query]))}, :private true, :name om.next/replace, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 15, :method-params ([template new-query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 2, :fn-var true, :arglists (quote ([template new-query]))}, computed {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 429, :column 7, :end-line 429, :end-column 15, :arglists (quote ([props computed-map])), :doc "Add computed properties to props. Note will replace any pre-existing\n   computed properties."}, :name om.next/computed, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 15, :method-params ([props computed-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 429, :end-line 429, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props computed-map])), :doc "Add computed properties to props. Note will replace any pre-existing\n   computed properties."}, ->Indexer {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 781, :column 12, :end-line 781, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([indexes]))}, :name om.next/->Indexer, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 19, :method-params ([indexes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 781, :end-line 781, :max-fixed-arity 1, :fn-var true, :arglists (quote ([indexes]))}, node->key {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 36, :column 8, :end-line 36, :end-column 17, :private true, :arglists (quote ([node]))}, :private true, :name om.next/node->key, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 17, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, focused-join {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 96, :column 8, :end-line 96, :end-column 20, :private true, :arglists (quote ([node ks]))}, :private true, :name om.next/focused-join, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 20, :method-params ([node ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 2, :fn-var true, :arglists (quote ([node ks]))}, union? {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 63, :column 16, :end-line 63, :end-column 22, :tag boolean, :arglists (quote ([node]))}, :name om.next/union?, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 22, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :ret-tag boolean, :end-line 63, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([node]))}, get-prev-props {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 295, :column 8, :end-line 295, :end-column 22, :private true, :arglists (quote ([x]))}, :private true, :name om.next/get-prev-props, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 22, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 295, :end-line 295, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, normalize* {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 932, :column 8, :end-line 932, :end-column 18, :private true, :arglists (quote ([selector data refs]))}, :private true, :name om.next/normalize*, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 18, :method-params ([selector data refs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 932, :end-line 932, :max-fixed-arity 3, :fn-var true, :arglists (quote ([selector data refs]))}, props* {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 314, :column 8, :end-line 314, :end-column 14, :private true, :arglists (quote ([x y] [x y z])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x y] [x y z]), :arglists ([x y] [x y z]), :arglists-meta (nil nil)}}, :private true, :name om.next/props*, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x y] [x y z]), :arglists ([x y] [x y z]), :arglists-meta (nil nil)}, :method-params ([x y] [x y z]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 314, :end-line 314, :max-fixed-arity 3, :fn-var true, :arglists ([x y] [x y z])}, class->any {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 884, :column 7, :end-line 884, :end-column 17, :arglists (quote ([x class])), :doc "Get any component from the indexer that matches the component class."}, :name om.next/class->any, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 17, :method-params ([x class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 884, :end-line 884, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x class])), :doc "Get any component from the indexer that matches the component class."}, mounted? {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 570, :column 16, :end-line 570, :end-column 24, :tag boolean, :arglists (quote ([x])), :doc "Returns true if the component is mounted."}, :name om.next/mounted?, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 24, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 570, :ret-tag boolean, :end-line 570, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :doc "Returns true if the component is mounted."}, focus-query {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 102, :column 8, :end-line 102, :end-column 19, :private true, :arglists (quote ([query path]))}, :private true, :name om.next/focus-query, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 19, :method-params ([query path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 2, :fn-var true, :arglists (quote ([query path]))}, -merge-pending-state! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 151, :column 4, :end-line 151, :end-column 25, :protocol om.next/ILocalState, :doc "Get the component's pending local state", :arglists (quote ([this]))}, :protocol om.next/ILocalState, :name om.next/-merge-pending-state!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 25, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 147, :end-line 151, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Get the component's pending local state"}, default-merge-tree {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 1228, :column 8, :end-line 1228, :end-column 26, :private true, :arglists (quote ([a b]))}, :private true, :name om.next/default-merge-tree, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 26, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1228, :end-line 1228, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, *reconciler* {:name om.next/*reconciler*, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 24, :column 1, :end-line 24, :end-column 49, :dynamic true, :private true, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 24, :column 37, :end-line 24, :end-column 49, :dynamic true, :private true}}, merge-novelty! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 1051, :column 8, :end-line 1051, :end-column 22, :private true, :arglists (quote ([reconciler state res]))}, :private true, :name om.next/merge-novelty!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 22, :method-params ([reconciler state res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1051, :end-line 1051, :max-fixed-arity 3, :fn-var true, :arglists (quote ([reconciler state res]))}, IQuery {:meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 144, :column 14, :end-line 144, :end-column 20, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {query [[this]]}}}, :protocol-symbol true, :name om.next/IQuery, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 20, :column 1, :line 144, :protocol-info {:methods {query [[this]]}}, :info nil, :end-line 144, :impls #{}, :doc nil, :jsdoc ("@interface")}, get-computed {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 439, :column 7, :end-line 439, :end-column 19, :arglists (quote ([x] [x k-or-ks])), :doc "Return the computed properties on a component or its props.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x k-or-ks]), :arglists ([x] [x k-or-ks]), :arglists-meta (nil nil)}}, :name om.next/get-computed, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x k-or-ks]), :arglists ([x] [x k-or-ks]), :arglists-meta (nil nil)}, :method-params ([x] [x k-or-ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 439, :end-line 439, :max-fixed-arity 2, :fn-var true, :arglists ([x] [x k-or-ks]), :doc "Return the computed properties on a component or its props."}, get-state {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 474, :column 7, :end-line 474, :end-column 16, :arglists (quote ([component] [component k-or-ks])), :doc "Get a component's local state. May provide a single key or a sequential\n   collection of keys for indexed access into the component's local state.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component k-or-ks]), :arglists ([component] [component k-or-ks]), :arglists-meta (nil nil)}}, :name om.next/get-state, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component k-or-ks]), :arglists ([component] [component k-or-ks]), :arglists-meta (nil nil)}, :method-params ([component] [component k-or-ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 474, :end-line 474, :max-fixed-arity 2, :fn-var true, :arglists ([component] [component k-or-ks]), :doc "Get a component's local state. May provide a single key or a sequential\n   collection of keys for indexed access into the component's local state."}, *parent* {:name om.next/*parent*, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 25, :column 1, :end-line 25, :end-column 45, :dynamic true, :private true, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 25, :column 37, :end-line 25, :end-column 45, :dynamic true, :private true}}, update-state! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 488, :column 7, :end-line 488, :end-column 20, :arglists (quote ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest])), :doc "Update a component's local state. Similar to Clojure(Script)'s update-in.", :top-fn {:variadic true, :max-fixed-arity 6, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3]), :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest]), :arglists-meta (nil nil nil nil nil nil)}}, :name om.next/update-state!, :variadic true, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 6, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3]), :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest]), :arglists-meta (nil nil nil nil nil nil)}, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3]), :protocol-impl nil, :arglists-meta (nil nil nil nil nil nil), :column 1, :line 488, :end-line 488, :max-fixed-arity 6, :fn-var true, :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest]), :doc "Update a component's local state. Similar to Clojure(Script)'s update-in."}, Indexer {:num-fields 1, :protocols #{cljs.core/IRecord om.next.protocols/IIndexer cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name om.next/Indexer, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 19, :type true, :column 12, :internal-ctor true, :line 781, :record true, :end-line 781, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, query-zip {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 44, :column 8, :end-line 44, :end-column 17, :private true, :arglists (quote ([root]))}, :private true, :name om.next/query-zip, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 17, :method-params ([root]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([root]))}, reconciler {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 1234, :column 7, :end-line 1234, :end-column 17, :arglists (quote ([{:keys [state shared shared-fn parser indexer ui->props normalize send merge-sends remotes merge merge-tree merge-ref optimize history root-render root-unmount], :or {root-render (fn* [p1__8405# p2__8406#] (js/ReactDOM.render p1__8405# p2__8406#)), merge-sends (fn* [p1__8403# p2__8404#] (merge-with into p1__8403# p2__8404#)), remotes [:remote], history 100, merge-ref default-merge-ref, merge default-merge, ui->props default-ui->props, indexer om.next/indexer, root-unmount (fn* [p1__8407#] (js/ReactDOM.unmountComponentAtNode p1__8407#)), merge-tree default-merge-tree, optimize (fn [cs] (sort-by depth cs))}, :as config}])), :doc "Construct a reconciler from a configuration map.\n\n   Required parameters:\n     :state        - the application state. If IAtom value is not supplied the\n                     data will be normalized into the default database format\n                     using the root query. This can be disabled by explicitly\n                     setting the optional :normalize parameter to false.\n     :parser       - the parser to be used\n\n   Optional parameters:\n     :shared       - a map of global shared properties for the component tree.\n     :shared-fn    - a function to compute global shared properties from the root props.\n                     the result is merged with :shared.\n     :send         - required only if the parser will return a non-empty value when\n                     run against the supplied :remotes. send is a function of two\n                     arguments, the map of remote expressions keyed by remote target\n                     and a callback which should be invoked with the result from each\n                     remote target. Note this means the callback can be invoked\n                     multiple times to support parallel fetching and incremental\n                     loading if desired.\n     :normalize    - whether the state should be normalized. If true it is assumed\n                     all novelty introduced into the system will also need\n                     normalization.\n     :remotes      - a vector of keywords representing remote services which can\n                     evaluate query expressions. Defaults to [:remote]\n     :root-render  - the root render function. Defaults to ReactDOM.render\n     :root-unmount - the root unmount function. Defaults to\n                     ReactDOM.unmountComponentAtNode\n     :logger       - supply a goog.log compatible logger"}, :name om.next/reconciler, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 17, :method-params ([p__8408]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1234, :end-line 1234, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [state shared shared-fn parser indexer ui->props normalize send merge-sends remotes merge merge-tree merge-ref optimize history root-render root-unmount], :or {root-render (fn* [p1__8405# p2__8406#] (js/ReactDOM.render p1__8405# p2__8406#)), merge-sends (fn* [p1__8403# p2__8404#] (merge-with into p1__8403# p2__8404#)), remotes [:remote], history 100, merge-ref default-merge-ref, merge default-merge, ui->props default-ui->props, indexer om.next/indexer, root-unmount (fn* [p1__8407#] (js/ReactDOM.unmountComponentAtNode p1__8407#)), merge-tree default-merge-tree, optimize (fn [cs] (sort-by depth cs))}, :as config}])), :doc "Construct a reconciler from a configuration map.\n\n   Required parameters:\n     :state        - the application state. If IAtom value is not supplied the\n                     data will be normalized into the default database format\n                     using the root query. This can be disabled by explicitly\n                     setting the optional :normalize parameter to false.\n     :parser       - the parser to be used\n\n   Optional parameters:\n     :shared       - a map of global shared properties for the component tree.\n     :shared-fn    - a function to compute global shared properties from the root props.\n                     the result is merged with :shared.\n     :send         - required only if the parser will return a non-empty value when\n                     run against the supplied :remotes. send is a function of two\n                     arguments, the map of remote expressions keyed by remote target\n                     and a callback which should be invoked with the result from each\n                     remote target. Note this means the callback can be invoked\n                     multiple times to support parallel fetching and incremental\n                     loading if desired.\n     :normalize    - whether the state should be normalized. If true it is assumed\n                     all novelty introduced into the system will also need\n                     normalization.\n     :remotes      - a vector of keywords representing remote services which can\n                     evaluate query expressions. Defaults to [:remote]\n     :root-render  - the root render function. Defaults to ReactDOM.render\n     :root-unmount - the root unmount function. Defaults to\n                     ReactDOM.unmountComponentAtNode\n     :logger       - supply a goog.log compatible logger"}, *instrument* {:name om.next/*instrument*, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 27, :column 1, :end-line 27, :end-column 49, :dynamic true, :private true, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 27, :column 37, :end-line 27, :end-column 49, :dynamic true, :private true}}, params {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 138, :column 4, :end-line 138, :end-column 10, :protocol om.next/IQueryParams, :doc "Return the query parameters", :arglists (quote ([this]))}, :protocol om.next/IQueryParams, :name om.next/params, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 10, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 137, :end-line 138, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the query parameters"}, *shared* {:name om.next/*shared*, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 26, :column 1, :end-line 26, :end-column 45, :dynamic true, :private true, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 26, :column 37, :end-line 26, :end-column 45, :dynamic true, :private true}}, get-indexer {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 866, :column 7, :end-line 866, :end-column 18, :arglists (quote ([reconciler])), :doc "PRIVATE: Get the indexer associated with the reconciler."}, :name om.next/get-indexer, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 18, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 866, :end-line 866, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler])), :doc "PRIVATE: Get the indexer associated with the reconciler."}, get-props* {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 286, :column 8, :end-line 286, :end-column 18, :private true, :arglists (quote ([x k]))}, :private true, :name om.next/get-props*, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 18, :method-params ([x k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 286, :end-line 286, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x k]))}, focus->path {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 114, :column 8, :end-line 114, :end-column 19, :private true, :arglists (quote ([focus] [focus bound] [focus bound path])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([focus] [focus bound] [focus bound path]), :arglists ([focus] [focus bound] [focus bound path]), :arglists-meta (nil nil nil)}}, :private true, :name om.next/focus->path, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([focus] [focus bound] [focus bound path]), :arglists ([focus] [focus bound] [focus bound path]), :arglists-meta (nil nil nil)}, :method-params ([focus] [focus bound] [focus bound path]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 3, :fn-var true, :arglists ([focus] [focus bound] [focus bound path])}, get-params {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 178, :column 7, :end-line 178, :end-column 17, :arglists (quote ([component])), :doc "Return the query params for a component."}, :name om.next/get-params, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 17, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 178, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Return the query params for a component."}, bind-query {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 160, :column 8, :end-line 160, :end-column 18, :private true, :arglists (quote ([query params]))}, :private true, :name om.next/bind-query, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 18, :method-params ([query params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 2, :fn-var true, :arglists (quote ([query params]))}, compute-react-key {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 234, :column 8, :end-line 234, :end-column 25, :private true, :arglists (quote ([cl props]))}, :private true, :name om.next/compute-react-key, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 25, :method-params ([cl props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 234, :end-line 234, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cl props]))}, set-prop! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 304, :column 8, :end-line 304, :end-column 17, :private true, :arglists (quote ([c k v])), :doc "PRIVATE: Do not use"}, :private true, :name om.next/set-prop!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 17, :method-params ([c k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 304, :end-line 304, :max-fixed-arity 3, :fn-var true, :arglists (quote ([c k v])), :doc "PRIVATE: Do not use"}, *raf* {:name om.next/*raf*, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 23, :column 1, :end-line 23, :end-column 28, :dynamic true, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 23, :column 23, :end-line 23, :end-column 28, :dynamic true}}, IQueryParams {:meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 137, :column 14, :end-line 137, :end-column 26, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {params [[this]]}}}, :protocol-symbol true, :name om.next/IQueryParams, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 26, :column 1, :line 137, :protocol-info {:methods {params [[this]]}}, :info nil, :end-line 137, :impls #{default}, :doc nil, :jsdoc ("@interface")}, join-key {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 90, :column 8, :end-line 90, :end-column 16, :private true, :arglists (quote ([node]))}, :private true, :name om.next/join-key, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 16, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, state {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 277, :column 8, :end-line 277, :end-column 13, :private true, :arglists (quote ([c]))}, :private true, :name om.next/state, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 13, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 277, :end-line 277, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, schedule-render! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 639, :column 7, :end-line 639, :end-column 23, :arglists (quote ([reconciler]))}, :name om.next/schedule-render!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 23, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 639, :end-line 639, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler]))}, react-set-state! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 523, :column 7, :end-line 523, :end-column 23, :arglists (quote ([component new-state] [component new-state cb])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([component new-state] [component new-state cb]), :arglists ([component new-state] [component new-state cb]), :arglists-meta (nil nil)}}, :name om.next/react-set-state!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 23, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([component new-state] [component new-state cb]), :arglists ([component new-state] [component new-state cb]), :arglists-meta (nil nil)}, :method-params ([component new-state] [component new-state cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 523, :end-line 523, :max-fixed-arity 3, :fn-var true, :arglists ([component new-state] [component new-state cb])}, class-path {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 599, :column 8, :end-line 599, :end-column 18, :private true, :arglists (quote ([c]))}, :private true, :name om.next/class-path, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 18, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 599, :end-line 599, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, transact! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 730, :column 7, :end-line 730, :end-column 16, :arglists (quote ([x tx] [r ref tx])), :doc "Given a reconciler or component run a transaction. tx is a parse expression\n   that should include mutations followed by any necessary read. The reads will\n   be used to trigger component re-rendering. If given a reconciler can be\n   optionally passed a ref as the second argument.\n\n   Example:\n\n     (om/transact! widget\n       '[(do/this!) (do/that!)\n         :read/this :read/that])", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x tx] [r ref tx]), :arglists ([x tx] [r ref tx]), :arglists-meta (nil nil)}}, :name om.next/transact!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x tx] [r ref tx]), :arglists ([x tx] [r ref tx]), :arglists-meta (nil nil)}, :method-params ([x tx] [r ref tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 730, :end-line 730, :max-fixed-arity 3, :fn-var true, :arglists ([x tx] [r ref tx]), :doc "Given a reconciler or component run a transaction. tx is a parse expression\n   that should include mutations followed by any necessary read. The reads will\n   be used to trigger component re-rendering. If given a reconciler can be\n   optionally passed a ref as the second argument.\n\n   Example:\n\n     (om/transact! widget\n       '[(do/this!) (do/that!)\n         :read/this :read/that])"}, schedule-sends! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 651, :column 7, :end-line 651, :end-column 22, :arglists (quote ([reconciler]))}, :name om.next/schedule-sends!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 22, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 651, :end-line 651, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler]))}, basis-t {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 636, :column 8, :end-line 636, :end-column 15, :private true, :arglists (quote ([reconciler]))}, :private true, :name om.next/basis-t, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 15, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 636, :end-line 636, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler]))}, roots {:name om.next/roots, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 22, :column 1, :end-line 22, :end-column 21, :private true, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 22, :column 16, :end-line 22, :end-column 21, :private true}}, *depth* {:name om.next/*depth*, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 28, :column 1, :end-line 28, :end-column 44, :dynamic true, :private true, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 28, :column 37, :end-line 28, :end-column 44, :dynamic true, :private true}}, add-root! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 657, :column 7, :end-line 657, :end-column 16, :arglists (quote ([reconciler root-class target] [reconciler root-class target options])), :doc "Given a root component class and a target root DOM node, instantiate and\n   render the root class using the reconciler's :state property. The reconciler\n   will continue to observe changes to :state and keep the target node in sync.\n   Note a reconciler may have only one root. If invoked on a reconciler with an\n   existing root, the new root will replace the old one.", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([reconciler root-class target] [reconciler root-class target options]), :arglists ([reconciler root-class target] [reconciler root-class target options]), :arglists-meta (nil nil)}}, :name om.next/add-root!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([reconciler root-class target] [reconciler root-class target options]), :arglists ([reconciler root-class target] [reconciler root-class target options]), :arglists-meta (nil nil)}, :method-params ([reconciler root-class target] [reconciler root-class target options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 657, :end-line 657, :max-fixed-arity 4, :fn-var true, :arglists ([reconciler root-class target] [reconciler root-class target options]), :doc "Given a root component class and a target root DOM node, instantiate and\n   render the root class using the reconciler's :state property. The reconciler\n   will continue to observe changes to :state and keep the target node in sync.\n   Note a reconciler may have only one root. If invoked on a reconciler with an\n   existing root, the new root will replace the old one."}, reconciler? {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 1308, :column 16, :end-line 1308, :end-column 27, :tag boolean, :arglists (quote ([x])), :doc "Returns true if x is a reconciler."}, :name om.next/reconciler?, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 27, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1308, :ret-tag boolean, :end-line 1308, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :doc "Returns true if x is a reconciler."}, get-query {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 192, :column 7, :end-line 192, :end-column 16, :arglists (quote ([x])), :doc "Return a IQuery/IParams instance bound query. Works for component classes\n   and component instances. See also om.next/full-query."}, :name om.next/get-query, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 192, :end-line 192, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Return a IQuery/IParams instance bound query. Works for component classes\n   and component instances. See also om.next/full-query."}, ref->components {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 872, :column 7, :end-line 872, :end-column 22, :arglists (quote ([x ref])), :doc "Return all components for a given ref."}, :name om.next/ref->components, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 22, :method-params ([x ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 872, :end-line 872, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x ref])), :doc "Return all components for a given ref."}, mock-root {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 678, :column 7, :end-line 678, :end-column 16, :arglists (quote ([reconciler root-class])), :doc "Create an Om Next root without an actual DOM target. Useful in devcards\n   testing context."}, :name om.next/mock-root, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 16, :method-params ([reconciler root-class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 678, :end-line 678, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler root-class])), :doc "Create an Om Next root without an actual DOM target. Useful in devcards\n   testing context."}, ->Reconciler {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 1078, :column 12, :end-line 1078, :end-column 22, :internal-ctor true, :factory :positional, :arglists (quote ([config state]))}, :name om.next/->Reconciler, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 22, :method-params ([config state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 1078, :end-line 1078, :max-fixed-arity 2, :fn-var true, :arglists (quote ([config state]))}, Reconciler {:num-fields 2, :protocols #{cljs.core/IRecord om.next.protocols/IReconciler cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name om.next/Reconciler, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 22, :type true, :column 12, :internal-ctor true, :line 1078, :record true, :end-line 1078, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, OmProps {:private true, :num-fields 2, :protocols #{}, :name om.next/OmProps, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 27, :type true, :column 20, :line 221, :record false, :end-line 221, :skip-protocol-flag nil}, transact* {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 705, :column 7, :end-line 705, :end-column 16, :arglists (quote ([r c ref tx]))}, :name om.next/transact*, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 16, :method-params ([r c ref tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 705, :end-line 705, :max-fixed-arity 4, :fn-var true, :arglists (quote ([r c ref tx]))}, dispatch {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 769, :column 7, :end-line 769, :end-column 15, :arglists (quote ([_ key _])), :doc "Helper function for implementing :read and :mutate as multimethods. Use this\n   as the dispatch-fn."}, :name om.next/dispatch, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 15, :method-params ([_ key _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 769, :end-line 769, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ key _])), :doc "Helper function for implementing :read and :mutate as multimethods. Use this\n   as the dispatch-fn."}, app-state {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 1313, :column 7, :end-line 1313, :end-column 16, :arglists (quote ([reconciler])), :doc "Return the reconciler's application state atom. Useful when the reconciler\n   was initialized via denormalized data."}, :name om.next/app-state, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 16, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1313, :end-line 1313, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler])), :doc "Return the reconciler's application state atom. Useful when the reconciler\n   was initialized via denormalized data."}, -get-state {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 149, :column 4, :end-line 149, :end-column 14, :protocol om.next/ILocalState, :doc "Get the component's local state", :arglists (quote ([this]))}, :protocol om.next/ILocalState, :name om.next/-get-state, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 147, :end-line 149, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Get the component's local state"}, join? {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 777, :column 8, :end-line 777, :end-column 13, :private true, :arglists (quote ([x]))}, :private true, :name om.next/join?, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 777, :end-line 777, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, factory {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 241, :column 7, :end-line 241, :end-column 14, :arglists (quote ([class] [class {:keys [validator keyfn], :as opts}])), :doc "Create a factory constructor from a component class created with\n   om.next/defui.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([class] [class {:keys [validator keyfn], :as opts}]), :arglists ([class] [class {:keys [validator keyfn], :as opts}]), :arglists-meta (nil nil)}}, :name om.next/factory, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([class] [class {:keys [validator keyfn], :as opts}]), :arglists ([class] [class {:keys [validator keyfn], :as opts}]), :arglists-meta (nil nil)}, :method-params ([class] [class {:keys [validator keyfn], :as opts}]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 241, :end-line 241, :max-fixed-arity 2, :fn-var true, :arglists ([class] [class {:keys [validator keyfn], :as opts}]), :doc "Create a factory constructor from a component class created with\n   om.next/defui."}, -get-rendered-state {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 150, :column 4, :end-line 150, :end-column 23, :protocol om.next/ILocalState, :doc "Get the component's rendered local state", :arglists (quote ([this]))}, :protocol om.next/ILocalState, :name om.next/-get-rendered-state, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 147, :end-line 150, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Get the component's rendered local state"}, parser {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 762, :column 7, :end-line 762, :end-column 13, :arglists (quote ([{:keys [read mutate], :as opts}])), :doc "Create a parser. The argument is a map of two keys, :read and :mutate. Both\n   functions should have the signature (Env -> Key -> Params -> ParseResult)."}, :name om.next/parser, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 13, :method-params ([p__8137]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 762, :end-line 762, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [read mutate], :as opts}])), :doc "Create a parser. The argument is a map of two keys, :read and :mutate. Both\n   functions should have the signature (Env -> Key -> Params -> ParseResult)."}, merge-pending-state! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 513, :column 8, :end-line 513, :end-column 28, :private true, :arglists (quote ([c]))}, :private true, :name om.next/merge-pending-state!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 28, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 513, :end-line 513, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, merge-pending-props! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 342, :column 8, :end-line 342, :end-column 28, :private true, :arglists (quote ([c]))}, :private true, :name om.next/merge-pending-props!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 28, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 342, :end-line 342, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, nil-or-map? {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 33, :column 16, :end-line 33, :end-column 27, :tag boolean, :arglists (quote ([x]))}, :name om.next/nil-or-map?, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 27, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :ret-tag boolean, :end-line 33, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x]))}, *logger* {:name om.next/*logger*, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 14, :column 1, :end-line 14, :end-column 18, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 14, :column 10, :end-line 14, :end-column 18}}, sift-refs {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 1004, :column 8, :end-line 1004, :end-column 17, :private true, :arglists (quote ([res]))}, :private true, :name om.next/sift-refs, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 17, :method-params ([res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1004, :end-line 1004, :max-fixed-arity 1, :fn-var true, :arglists (quote ([res]))}, indexer {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 858, :column 7, :end-line 858, :end-column 14, :arglists (quote ([])), :doc "Given a function (Component -> Ref), return an indexer."}, :name om.next/indexer, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 858, :end-line 858, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Given a function (Component -> Ref), return an indexer."}, subquery {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 619, :column 7, :end-line 619, :end-column 15, :arglists (quote ([x subquery-ref subquery-class])), :doc "Given a class or mounted component x and a ref to an instantiated component\n   or class that defines a subquery, pick the most specific subquery. If the\n   component is mounted subquery-ref will be used, subquery-class otherwise."}, :name om.next/subquery, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 15, :method-params ([x subquery-ref subquery-class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 619, :end-line 619, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x subquery-ref subquery-class])), :doc "Given a class or mounted component x and a ref to an instantiated component\n   or class that defines a subquery, pick the most specific subquery. If the\n   component is mounted subquery-ref will be used, subquery-class otherwise."}, component? {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 272, :column 16, :end-line 272, :end-column 26, :tag boolean, :arglists (quote ([x])), :doc "Returns true if the argument is an Om component."}, :name om.next/component?, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 26, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 272, :ret-tag boolean, :end-line 272, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :doc "Returns true if the argument is an Om component."}, set-params! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 551, :column 7, :end-line 551, :end-column 18, :arglists (quote ([component new-params])), :doc "Change the query parameters of a component. Will schedule a re-render."}, :name om.next/set-params!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 18, :method-params ([component new-params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 551, :end-line 551, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component new-params])), :doc "Change the query parameters of a component. Will schedule a re-render."}, remove-root! {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 672, :column 7, :end-line 672, :end-column 19, :arglists (quote ([reconciler target])), :doc "Remove a root target (a DOM element) from a reconciler. The reconciler will\n   no longer attempt to reconcile application state with the specified root."}, :name om.next/remove-root!, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 19, :method-params ([reconciler target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 672, :end-line 672, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler target])), :doc "Remove a root target (a DOM element) from a reconciler. The reconciler will\n   no longer attempt to reconcile application state with the specified root."}, ident {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 131, :column 4, :end-line 131, :end-column 9, :protocol om.next/Ident, :doc "Return the ref for this component", :arglists (quote ([this props]))}, :protocol om.next/Ident, :name om.next/ident, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 9, :method-params ([this props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 131, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this props])), :doc "Return the ref for this component"}, react-ref {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 575, :column 7, :end-line 575, :end-column 16, :arglists (quote ([component name])), :doc "Returns the component associated with a component's React ref."}, :name om.next/react-ref, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 16, :method-params ([component name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 575, :end-line 575, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component name])), :doc "Returns the component associated with a component's React ref."}, get-reconciler {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 309, :column 8, :end-line 309, :end-column 22, :private true, :arglists (quote ([c]))}, :private true, :name om.next/get-reconciler, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 22, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 309, :end-line 309, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, map->Indexer {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 781, :column 12, :end-line 781, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__8147]))}, :name om.next/map->Indexer, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 19, :method-params ([G__8147]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 781, :end-line 781, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__8147]))}, shared {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 392, :column 7, :end-line 392, :end-column 13, :arglists (quote ([component] [component k-or-ks])), :doc "Return the global shared properties of the Om Next root. See :shared and\n   :shared-fn reconciler options.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component k-or-ks]), :arglists ([component] [component k-or-ks]), :arglists-meta (nil nil)}}, :name om.next/shared, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component k-or-ks]), :arglists ([component] [component k-or-ks]), :arglists-meta (nil nil)}, :method-params ([component] [component k-or-ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 392, :end-line 392, :max-fixed-arity 2, :fn-var true, :arglists ([component] [component k-or-ks]), :doc "Return the global shared properties of the Om Next root. See :shared and\n   :shared-fn reconciler options."}, depth {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 370, :column 8, :end-line 370, :end-column 13, :private true, :arglists (quote ([component])), :doc "PRIVATE: Returns the render depth (a integer) of the component relative to\n  the mount root."}, :private true, :name om.next/depth, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 13, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 370, :end-line 370, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "PRIVATE: Returns the render depth (a integer) of the component relative to\n  the mount root."}, ref? {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 1010, :column 16, :end-line 1010, :end-column 20, :tag boolean, :arglists (quote ([x]))}, :name om.next/ref?, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 20, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1010, :ret-tag boolean, :end-line 1010, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x]))}, ILocalState {:meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 147, :column 14, :end-line 147, :end-column 25, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-set-state! [[this new-state]], -get-state [[this]], -get-rendered-state [[this]], -merge-pending-state! [[this]]}}}, :protocol-symbol true, :name om.next/ILocalState, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 25, :column 1, :line 147, :protocol-info {:methods {-set-state! [[this new-state]], -get-state [[this]], -get-rendered-state [[this]], -merge-pending-state! [[this]]}}, :info nil, :end-line 147, :impls #{}, :doc nil, :jsdoc ("@interface")}, full-query {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :line 897, :column 7, :end-line 897, :end-column 17, :arglists (quote ([component] [component path])), :doc "Returns the absolute query for a given component, not relative like\n   om.next/get-query.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component path]), :arglists ([component] [component path]), :arglists-meta (nil nil)}}, :name om.next/full-query, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/1vx/-c0cxn7/app.out/om/next.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component path]), :arglists ([component] [component path]), :arglists-meta (nil nil)}, :method-params ([component] [component path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 897, :end-line 897, :max-fixed-arity 2, :fn-var true, :arglists ([component] [component path]), :doc "Returns the absolute query for a given component, not relative like\n   om.next/get-query."}}, :require-macros {om.next om.next}, :cljs.analyzer/constants {:seen #{:om.next/union indexes x :remote :normalized satisfies? fn? :remove vector? :react-key subquery-ref :read :om.next/queries :else props :merge-sends :ref :config :queue :validator :sends-queued :remotes subquery-class * map? :reconciler c' :params :history string? :type :keyfn :merge-ref :state :queued-sends :prop->classes keyword? validator :component config :ref->components :merge :om.next/no-queries :queued :class->components IQuery or :shared-fn reconciler :render :parser :keys :ui->props nil? :next :root state component :logger :indexer :root-unmount basis-t reconciler? :om-path :send :om.next/not-found :shared :merge-tree :optimize c :t tx :om.next/computed :indexes :target :root-render :query class opts :class-path->query :normalize component? root-class :mutate :om.next/skip}, :order [:else :om.next/union * :config :state :om.next/queries :query :params :component nil? c' c props basis-t :react-key :om-path :validator :keyfn fn? class validator :ref component? component :om.next/computed :history :logger or keyword? subquery-ref string? subquery-class reconciler? reconciler root-class :shared :parser :reconciler :remotes vector? tx satisfies? IQuery x :read :mutate map? opts :prop->classes :class-path->query :class->components :ref->components :om.next/not-found :indexes indexes :indexer :type :om.next/no-queries :merge-ref :normalize :merge-tree :root :keys :next :merge :queue :queued-sends :merge-sends :sends-queued :send :render :om.next/skip :ui->props :optimize :queued :t :normalized :shared-fn :root-render :target :remove :root-unmount config state :remote]}, :doc nil}