;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name kanban.parsing.boards, :imports nil, :requires {om om.next, om.next om.next, lanes kanban.parsing.lanes, kanban.parsing.lanes kanban.parsing.lanes, kanban.reconciler kanban.reconciler}, :uses {mutate kanban.reconciler, read kanban.reconciler}, :defs {create-board {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-p9hf6h/kanban/parsing/boards.cljs", :line 40, :column 7, :end-line 40, :end-column 19, :arglists (quote ([st]))}, :name kanban.parsing.boards/create-board, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/iow/-p9hf6h/kanban/parsing/boards.cljs", :end-column 19, :method-params ([st]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([st]))}}, :require-macros {om om.next, om.next om.next}, :cljs.analyzer/constants {:seen #{:lanes boards/edit :boards/editing :ref :boards/active :name :value :state :keys boards/create-board :id :action boards/activate :query boards/update :board/by-id :boards :board :data}, :order [:boards :state :query :value :boards/active boards/activate :ref :action :keys :boards/editing boards/edit :board boards/update :data :id :name :lanes :board/by-id boards/create-board]}, :doc nil}