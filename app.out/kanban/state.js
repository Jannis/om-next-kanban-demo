// Compiled by ClojureScript 1.7.170 {:static-fns true, :optimize-constants true}
goog.provide('kanban.state');
goog.require('cljs.core');
kanban.state.initial_state = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$boards,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$id,(1),cljs.core.cst$kw$name,"Development",cljs.core.cst$kw$description,[cljs.core.str("Kanban board for developers. Developers select work "),cljs.core.str("from Issues and the Backlog. When they start working, "),cljs.core.str("they move these cards to doing and assign them to "),cljs.core.str("themselves. Once completed, they move the card to "),cljs.core.str("Test for testers to verify the results of the work.")].join(''),cljs.core.cst$kw$lanes,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$id,(10)], null),new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$id,(11)], null),new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$id,(12)], null),new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$id,(13)], null)], null)], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$id,(2),cljs.core.cst$kw$name,"Testing",cljs.core.cst$kw$description,[cljs.core.str("Kanban board for testers. Testers pick up the work that "),cljs.core.str("developers have completed and moved to Test. They then "),cljs.core.str("move these cards to Testing and assign them to themselves. "),cljs.core.str("If testing is successful, cards are moved to Done, otherwise "),cljs.core.str("they are moved to Issues, where they are again picked up by "),cljs.core.str("developers for another round.")].join(''),cljs.core.cst$kw$lanes,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$id,(13)], null),new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$id,(14)], null),new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$id,(15)], null),new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$id,(10)], null)], null)], null)], null),cljs.core.cst$kw$lanes,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$id,(10),cljs.core.cst$kw$name,"Issues",cljs.core.cst$kw$cards,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$id,(102)], null)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$id,(11),cljs.core.cst$kw$name,"Backlog",cljs.core.cst$kw$cards,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$id,(100)], null),new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$id,(101)], null)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$id,(12),cljs.core.cst$kw$name,"Doing",cljs.core.cst$kw$cards,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$id,(103)], null)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$id,(13),cljs.core.cst$kw$name,"Test",cljs.core.cst$kw$cards,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$id,(105)], null)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$id,(14),cljs.core.cst$kw$name,"Testing",cljs.core.cst$kw$cards,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$id,(104)], null)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$id,(15),cljs.core.cst$kw$name,"Done",cljs.core.cst$kw$cards,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$id,(106)], null)], null)], null)], null),cljs.core.cst$kw$cards,new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$id,(100),cljs.core.cst$kw$text,"Allow users to edit card assignees"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$id,(101),cljs.core.cst$kw$text,"Allow users to change lane names"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$id,(102),cljs.core.cst$kw$text,"Fix card drag-and-drop on IE8 and Firefox"], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$id,(103),cljs.core.cst$kw$text,"Implement basic Kanban demo app",cljs.core.cst$kw$assignees,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$id,(1000)], null)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$id,(104),cljs.core.cst$kw$text,"Figure out how to deploy the demo app on Heroku",cljs.core.cst$kw$assignees,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$id,(1000)], null),new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$id,(1001)], null)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$id,(105),cljs.core.cst$kw$text,"Write instructions on how to run the demo app",cljs.core.cst$kw$assignees,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$id,(1001)], null)], null)], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$id,(106),cljs.core.cst$kw$text,"Create GitHub repository for the demo app"], null)], null),cljs.core.cst$kw$users,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$id,(1000),cljs.core.cst$kw$username,"konrad",cljs.core.cst$kw$name,"Konrad Zuse"], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$id,(1001),cljs.core.cst$kw$username,"ada",cljs.core.cst$kw$name,"Ada Lovelace"], null)], null)], null);
