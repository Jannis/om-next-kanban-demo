;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{boolean map sequential symbol not vector keyword}, :name thi.ng.validate.core, :imports nil, :requires nil, :uses nil, :defs {email-regexp {:name thi.ng.validate.core/email-regexp, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 352, :column 1, :end-line 352, :end-column 18, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 352, :column 6, :end-line 352, :end-column 18}}, boolean {:name thi.ng.validate.core/boolean, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 248, :column 1, :end-line 248, :end-column 13, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 248, :column 6, :end-line 248, :end-column 13}, :doc "Returns validation spec to ensure value is a boolean."}, map {:name thi.ng.validate.core/map, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 264, :column 1, :end-line 264, :end-column 9, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 264, :column 6, :end-line 264, :end-column 9}, :doc "Returns validation spec to ensure value is a map."}, reduce-specs {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 4, :column 8, :end-line 4, :end-column 20, :private true, :arglists (quote ([f state specs path])), :doc "Reduces given `specs` with `f` and initial `state`.\n  Then returns new state with new `path`."}, :private true, :name thi.ng.validate.core/reduce-specs, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :end-column 20, :method-params ([f state specs path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 4, :fn-var true, :arglists (quote ([f state specs path])), :doc "Reduces given `specs` with `f` and initial `state`.\n  Then returns new state with new `path`."}, validate-1 {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 16, :column 8, :end-line 16, :end-column 18, :private true, :arglists (quote ([[coll errors :as state] path [f msg correct]])), :doc "Applies a single validation spec to the collection value for\n  given path/key. Adds an error message, if validation fails and\n  no correction fn is given, or if correction fails."}, :private true, :name thi.ng.validate.core/validate-1, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :end-column 18, :method-params ([p__10291 path p__10292]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 3, :fn-var true, :arglists (quote ([[coll errors :as state] path [f msg correct]])), :doc "Applies a single validation spec to the collection value for\n  given path/key. Adds an error message, if validation fails and\n  no correction fn is given, or if correction fails."}, member-of {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 326, :column 7, :end-line 326, :end-column 16, :arglists (quote ([set & [msg corr]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(set [msg corr])], :arglists ([set & [msg corr]]), :arglists-meta (nil)}}, :name thi.ng.validate.core/member-of, :variadic true, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(set [msg corr])], :arglists ([set & [msg corr]]), :arglists-meta (nil)}, :method-params [(set [msg corr])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 326, :end-line 326, :max-fixed-arity 1, :fn-var true, :arglists ([set & [msg corr]])}, required {:name thi.ng.validate.core/required, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 215, :column 1, :end-line 215, :end-column 14, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 215, :column 6, :end-line 215, :end-column 14}, :doc "Returns validation spec to ensure the presence of a value.\n  For collections, it uses `(seq x)` to only allow\n  non-empty collections."}, mailto {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 366, :column 7, :end-line 366, :end-column 13, :arglists (quote ([] [msg])), :doc "Returns validation spec for mailto: URIs", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [msg]), :arglists ([] [msg]), :arglists-meta (nil nil)}}, :name thi.ng.validate.core/mailto, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [msg]), :arglists ([] [msg]), :arglists-meta (nil nil)}, :method-params ([] [msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 366, :end-line 366, :max-fixed-arity 1, :fn-var true, :arglists ([] [msg]), :doc "Returns validation spec for mailto: URIs"}, neg {:name thi.ng.validate.core/neg, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 244, :column 1, :end-line 244, :end-column 9, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 244, :column 6, :end-line 244, :end-column 9}, :doc "Returns validation spec to ensure value is a negative number."}, alts {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 189, :column 7, :end-line 189, :end-column 11, :arglists (quote ([vals & [msg corr]])), :doc "Takes a seq of validators and optional error message & correction fn.\n  Tries given validators in order and stops with first positive\n  match (or corrected value).", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(vals [msg corr])], :arglists ([vals & [msg corr]]), :arglists-meta (nil)}}, :name thi.ng.validate.core/alts, :variadic true, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(vals [msg corr])], :arglists ([vals & [msg corr]]), :arglists-meta (nil)}, :method-params [(vals [msg corr])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 189, :end-line 189, :max-fixed-arity 1, :fn-var true, :arglists ([vals & [msg corr]]), :doc "Takes a seq of validators and optional error message & correction fn.\n  Tries given validators in order and stops with first positive\n  match (or corrected value)."}, validator-x {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 176, :column 7, :end-line 176, :end-column 18, :arglists (quote ([pred f err])), :doc "Similar to `validator` fn, this is an HOF to build a validator\n  fn which takes an extra argument `x` for the validation predicate,\n  e.g. to construct a validation of `< x`.\n\n  `validator-x` itself takes 2 fns and a default error message.\n  The first fn is the actual validation predicate.\n  The second fn is applied to the to-be-verified value before\n  passing it to the predicate."}, :name thi.ng.validate.core/validator-x, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :end-column 18, :method-params ([pred f err]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 3, :fn-var true, :arglists (quote ([pred f err])), :doc "Similar to `validator` fn, this is an HOF to build a validator\n  fn which takes an extra argument `x` for the validation predicate,\n  e.g. to construct a validation of `< x`.\n\n  `validator-x` itself takes 2 fns and a default error message.\n  The first fn is the actual validation predicate.\n  The second fn is applied to the to-be-verified value before\n  passing it to the predicate."}, less-than {:name thi.ng.validate.core/less-than, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 304, :column 1, :end-line 304, :end-column 15, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 304, :column 6, :end-line 304, :end-column 15}, :doc "Returns validation spec to ensure value is < x."}, email {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 361, :column 7, :end-line 361, :end-column 12, :arglists (quote ([] [msg])), :doc "Returns validation spec for email addresses.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [msg]), :arglists ([] [msg]), :arglists-meta (nil nil)}}, :name thi.ng.validate.core/email, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [msg]), :arglists ([] [msg]), :arglists-meta (nil nil)}, :method-params ([] [msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 361, :end-line 361, :max-fixed-arity 1, :fn-var true, :arglists ([] [msg]), :doc "Returns validation spec for email addresses."}, uuid4-regexp {:name thi.ng.validate.core/uuid4-regexp, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 349, :column 1, :end-line 349, :end-column 18, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 349, :column 6, :end-line 349, :end-column 18}}, max-length {:name thi.ng.validate.core/max-length, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 296, :column 1, :end-line 296, :end-column 16, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 296, :column 6, :end-line 296, :end-column 16}, :doc "Returns validation spec to ensure value has a max length."}, min-length {:name thi.ng.validate.core/min-length, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 292, :column 1, :end-line 292, :end-column 16, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 292, :column 6, :end-line 292, :end-column 16}, :doc "Returns validation spec to ensure value has a min length."}, valid? {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 151, :column 7, :end-line 151, :end-column 13, :arglists (quote ([m specs])), :doc "Same as `validate`, but only acts as predicate and returns\n  true or false to indicate if validation succeeded."}, :name thi.ng.validate.core/valid?, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :end-column 13, :method-params ([m specs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 151, :end-line 151, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m specs])), :doc "Same as `validate`, but only acts as predicate and returns\n  true or false to indicate if validation succeeded."}, validate {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 74, :column 7, :end-line 74, :end-column 15, :arglists (quote ([coll specs])), :doc "Validates `coll` (a map or vector) with given validation specs.\n  Returns a 2-element vector of the (possibly corrected) `coll` and a\n  map of errors (or nil, if there weren't any).\n\n  Specs have the following format:\n\n  key [validation-fn error-message correction-fn]\n\n  If multiple validations should be applied to a key, then these must be\n  given as a seq/vector:\n\n  key [[val-fn1 msg1] [val-fn2 msg2 corr-fn] ...]\n\n  Validation for a key stops with the first failure (so if `val-fn1` fails\n  (and can't be corrected), `val-fn2` will *not* be checked etc.)\n\n  For each spec only the `validation-fn` is required. This function takes\n  two args: the current path into the data structure (a vector) and the value\n  at that path. If an `error-message` is omitted, a generic one will be used.\n  The optional `correction-fn` takes the same two args as `validation-fn`\n  and should return a non-`nil` value as correction. If correction\n  succeeded, no error message will be added for that entry.\n\n  (v/validate\n  {:a \"hello world\"}\n  {:a (v/max-length 5 (fn [_ v] (.substring v 0 5)))})\n\n  ; [{:a \"hello\"} nil]\n\n  Specs can also be given as nested maps, reflecting the structure\n  of the collection:\n\n  key {:a {:b [validation-fn error-msg correction-fn]}\n  :c [validation-fn error-msg correction-fn]}\n\n  If a `specs` map contains the wildcard key `:*`, then that key's spec\n  is applied *first* to all keys in the data map at that parent path.\n  In the example below the wildcard spec ensures all items of `:b` are\n  positive numbers, then the last item of `:b` also needs to be > 50.\n\n  (v/validate\n  {:a {:b [10 -20 30]}}\n  {:a {:b {:* (v/pos), 2 (v/greater-than 50)}}})\n\n  ; [{:a {:b [10 -20 30]}}\n  ;  {:a {:b {1 (\"must be positive\")\n  ;           2 (\"must be greater than 50\"}}}]\n\n  The fail fast behavior also holds true for wildcard validation:\n  If wildcard validation fails for a key, any additionally given validators\n  for that key are ignored.\n\n  Some examples using various pre-defined validators:\n\n  (v/validate\n  {:a {:name \"toxi\" :age 38}}\n  {:a {:name [(v/string) (v/min-length 4)]\n  :age  [(v/number) (v/less-than 35)]\n  :city [(v/required) (v/string)]}})\n\n  ; [{:a {:age 38, :name \"toxi\"}}\n  ;  {:a {:city (\"is required\"),\n  ;       :age (\"must be less than 35\")}}]\n\n  (v/validate {:aabb {:min [-100 -200 -300] :max [100 200 300]}}\n  {:aabb {:min {0 (v/neg) 1 (v/neg) 2 (v/neg)} :max {:* (v/pos)}}})\n  \n  ; [{:aabb {:max [100 200 300],\n  ;          :min [-100 -200 -300]}}\n  ;  nil]"}, :name thi.ng.validate.core/validate, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :end-column 15, :method-params ([coll specs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 2, :fn-var true, :arglists (quote ([coll specs])), :doc "Validates `coll` (a map or vector) with given validation specs.\n  Returns a 2-element vector of the (possibly corrected) `coll` and a\n  map of errors (or nil, if there weren't any).\n\n  Specs have the following format:\n\n  key [validation-fn error-message correction-fn]\n\n  If multiple validations should be applied to a key, then these must be\n  given as a seq/vector:\n\n  key [[val-fn1 msg1] [val-fn2 msg2 corr-fn] ...]\n\n  Validation for a key stops with the first failure (so if `val-fn1` fails\n  (and can't be corrected), `val-fn2` will *not* be checked etc.)\n\n  For each spec only the `validation-fn` is required. This function takes\n  two args: the current path into the data structure (a vector) and the value\n  at that path. If an `error-message` is omitted, a generic one will be used.\n  The optional `correction-fn` takes the same two args as `validation-fn`\n  and should return a non-`nil` value as correction. If correction\n  succeeded, no error message will be added for that entry.\n\n  (v/validate\n  {:a \"hello world\"}\n  {:a (v/max-length 5 (fn [_ v] (.substring v 0 5)))})\n\n  ; [{:a \"hello\"} nil]\n\n  Specs can also be given as nested maps, reflecting the structure\n  of the collection:\n\n  key {:a {:b [validation-fn error-msg correction-fn]}\n  :c [validation-fn error-msg correction-fn]}\n\n  If a `specs` map contains the wildcard key `:*`, then that key's spec\n  is applied *first* to all keys in the data map at that parent path.\n  In the example below the wildcard spec ensures all items of `:b` are\n  positive numbers, then the last item of `:b` also needs to be > 50.\n\n  (v/validate\n  {:a {:b [10 -20 30]}}\n  {:a {:b {:* (v/pos), 2 (v/greater-than 50)}}})\n\n  ; [{:a {:b [10 -20 30]}}\n  ;  {:a {:b {1 (\"must be positive\")\n  ;           2 (\"must be greater than 50\"}}}]\n\n  The fail fast behavior also holds true for wildcard validation:\n  If wildcard validation fails for a key, any additionally given validators\n  for that key are ignored.\n\n  Some examples using various pre-defined validators:\n\n  (v/validate\n  {:a {:name \"toxi\" :age 38}}\n  {:a {:name [(v/string) (v/min-length 4)]\n  :age  [(v/number) (v/less-than 35)]\n  :city [(v/required) (v/string)]}})\n\n  ; [{:a {:age 38, :name \"toxi\"}}\n  ;  {:a {:city (\"is required\"),\n  ;       :age (\"must be less than 35\")}}]\n\n  (v/validate {:aabb {:min [-100 -200 -300] :max [100 200 300]}}\n  {:aabb {:min {0 (v/neg) 1 (v/neg) 2 (v/neg)} :max {:* (v/pos)}}})\n  \n  ; [{:aabb {:max [100 200 300],\n  ;          :min [-100 -200 -300]}}\n  ;  nil]"}, number {:name thi.ng.validate.core/number, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 252, :column 1, :end-line 252, :end-column 12, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 252, :column 6, :end-line 252, :end-column 12}, :doc "Returns validation spec to ensure value is a number."}, instance {:name thi.ng.validate.core/instance, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 284, :column 1, :end-line 284, :end-column 14, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 284, :column 6, :end-line 284, :end-column 14}, :doc "Returns validation spec to ensure value satisfies given protocol"}, fixed-length {:name thi.ng.validate.core/fixed-length, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 300, :column 1, :end-line 300, :end-column 18, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 300, :column 6, :end-line 300, :end-column 18}, :doc "Returns validation spec to ensure value has the given number of elements."}, satisfies {:name thi.ng.validate.core/satisfies, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 288, :column 1, :end-line 288, :end-column 15, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 288, :column 6, :end-line 288, :end-column 15}, :doc "Returns validation spec to ensure value satisfies given protocol"}, url-regexp {:name thi.ng.validate.core/url-regexp, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 358, :column 1, :end-line 358, :end-column 16, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 358, :column 6, :end-line 358, :end-column 16}}, validator {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 164, :column 7, :end-line 164, :end-column 16, :arglists (quote ([f error])), :doc "Higher order function to build a validator fn which accepts\n  optional an error message and/or correction fn. The constructed\n  fn then generates a validation spec. `validator` itself\n  takes two args: `f` the actual validation predicate fn and a\n  default validation `error` message."}, :name thi.ng.validate.core/validator, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :end-column 16, :method-params ([f error]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f error])), :doc "Higher order function to build a validator fn which accepts\n  optional an error message and/or correction fn. The constructed\n  fn then generates a validation spec. `validator` itself\n  takes two args: `f` the actual validation predicate fn and a\n  default validation `error` message."}, sequential {:name thi.ng.validate.core/sequential, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 260, :column 1, :end-line 260, :end-column 16, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 260, :column 6, :end-line 260, :end-column 16}, :doc "Returns validation spec to ensure value is a sequential collection"}, symbol {:name thi.ng.validate.core/symbol, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 272, :column 1, :end-line 272, :end-column 12, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 272, :column 6, :end-line 272, :end-column 12}, :doc "Returns validation spec to ensure value is a symbol."}, required-keys {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 335, :column 7, :end-line 335, :end-column 20, :arglists (quote ([ks & [msg corr]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(ks [msg corr])], :arglists ([ks & [msg corr]]), :arglists-meta (nil)}}, :name thi.ng.validate.core/required-keys, :variadic true, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(ks [msg corr])], :arglists ([ks & [msg corr]]), :arglists-meta (nil)}, :method-params [(ks [msg corr])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 335, :end-line 335, :max-fixed-arity 1, :fn-var true, :arglists ([ks & [msg corr]])}, remove-failed-specs {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 10, :column 8, :end-line 10, :end-column 27, :private true, :arglists (quote ([[_ errors path] specs]))}, :private true, :name thi.ng.validate.core/remove-failed-specs, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :end-column 27, :method-params ([p__10284 specs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[_ errors path] specs]))}, greater-than {:name thi.ng.validate.core/greater-than, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 308, :column 1, :end-line 308, :end-column 18, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 308, :column 6, :end-line 308, :end-column 18}, :doc "Returns validation spec to ensure value is > x."}, pos {:name thi.ng.validate.core/pos, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 240, :column 1, :end-line 240, :end-column 9, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 240, :column 6, :end-line 240, :end-column 9}, :doc "Returns validation spec to ensure value is a positive number."}, not {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 209, :column 7, :end-line 209, :end-column 10, :arglists (quote ([[f _ corr] msg])), :doc "Takes a single validation spec and wraps its fn so that it returns\n  the logical opposite. Returns modified spec."}, :name thi.ng.validate.core/not, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :end-column 10, :method-params ([p__10352 msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 209, :end-line 209, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[f _ corr] msg])), :doc "Takes a single validation spec and wraps its fn so that it returns\n  the logical opposite. Returns modified spec."}, mailto-regexp {:name thi.ng.validate.core/mailto-regexp, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 355, :column 1, :end-line 355, :end-column 19, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 355, :column 6, :end-line 355, :end-column 19}}, matches {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 343, :column 7, :end-line 343, :end-column 14, :arglists (quote ([re] [re msg])), :doc "Takes a regex and optional error message, returns a validator spec\n  which applies `clojure.core/re-matches` as validation fn.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([re] [re msg]), :arglists ([re] [re msg]), :arglists-meta (nil nil)}}, :name thi.ng.validate.core/matches, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([re] [re msg]), :arglists ([re] [re msg]), :arglists-meta (nil nil)}, :method-params ([re] [re msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 343, :end-line 343, :max-fixed-arity 2, :fn-var true, :arglists ([re] [re msg]), :doc "Takes a regex and optional error message, returns a validator spec\n  which applies `clojure.core/re-matches` as validation fn."}, validate-specs {:name thi.ng.validate.core/validate-specs, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 32, :column 1, :end-line 32, :end-column 25, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 32, :column 11, :end-line 32, :end-column 25}}, string {:name thi.ng.validate.core/string, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 280, :column 1, :end-line 280, :end-column 12, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 280, :column 6, :end-line 280, :end-column 12}, :doc "Returns validation spec to ensure value is a string."}, equals {:name thi.ng.validate.core/equals, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 312, :column 1, :end-line 312, :end-column 12, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 312, :column 6, :end-line 312, :end-column 12}, :doc "Returns validation spec to ensure value is x."}, vector {:name thi.ng.validate.core/vector, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 256, :column 1, :end-line 256, :end-column 12, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 256, :column 6, :end-line 256, :end-column 12}, :doc "Returns validation spec to ensure value is a vector."}, function {:name thi.ng.validate.core/function, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 268, :column 1, :end-line 268, :end-column 14, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 268, :column 6, :end-line 268, :end-column 14}, :doc "Returns validation spec to ensure value is a function."}, in-range {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 316, :column 7, :end-line 316, :end-column 15, :arglists (quote ([min max & [msg corr]])), :doc "Returns validation spec to ensure value is a number in\n  the range `min`..`max` (inclusive).", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(min max [msg corr])], :arglists ([min max & [msg corr]]), :arglists-meta (nil)}}, :name thi.ng.validate.core/in-range, :variadic true, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(min max [msg corr])], :arglists ([min max & [msg corr]]), :arglists-meta (nil)}, :method-params [(min max [msg corr])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 316, :end-line 316, :max-fixed-arity 2, :fn-var true, :arglists ([min max & [msg corr]]), :doc "Returns validation spec to ensure value is a number in\n  the range `min`..`max` (inclusive)."}, keyword {:name thi.ng.validate.core/keyword, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 276, :column 1, :end-line 276, :end-column 13, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 276, :column 6, :end-line 276, :end-column 13}, :doc "Returns validation spec to ensure value is a keyword."}, optional {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 221, :column 7, :end-line 221, :end-column 15, :arglists (quote ([spec] [[f msg corr] default])), :doc "Takes a single validation spec and optional default value, wraps its\n  validation fn so that it is only applied when the passed value is not nil.\n  Returns modified spec.\n\n  If a default value is given and the to-be-validated value is nil the new\n  spec includes a correction fn which returns the default value.\n  If the original spec included a correction fn, then this is also wrapped\n  and only called if the original value isn't nil, or else returns the default.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([spec] [[f msg corr] default]), :arglists ([spec] [[f msg corr] default]), :arglists-meta (nil nil)}}, :name thi.ng.validate.core/optional, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([spec] [[f msg corr] default]), :arglists ([spec] [[f msg corr] default]), :arglists-meta (nil nil)}, :method-params ([spec] [[f msg corr] default]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 221, :end-line 221, :max-fixed-arity 2, :fn-var true, :arglists ([spec] [[f msg corr] default]), :doc "Takes a single validation spec and optional default value, wraps its\n  validation fn so that it is only applied when the passed value is not nil.\n  Returns modified spec.\n\n  If a default value is given and the to-be-validated value is nil the new\n  spec includes a correction fn which returns the default value.\n  If the original spec included a correction fn, then this is also wrapped\n  and only called if the original value isn't nil, or else returns the default."}, uuid4 {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 371, :column 7, :end-line 371, :end-column 12, :arglists (quote ([] [msg])), :doc "Returns validation spec for email addresses.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [msg]), :arglists ([] [msg]), :arglists-meta (nil nil)}}, :name thi.ng.validate.core/uuid4, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [msg]), :arglists ([] [msg]), :arglists-meta (nil nil)}, :method-params ([] [msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 371, :end-line 371, :max-fixed-arity 1, :fn-var true, :arglists ([] [msg]), :doc "Returns validation spec for email addresses."}, url {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :line 376, :column 7, :end-line 376, :end-column 10, :arglists (quote ([] [msg])), :doc "Returns validation spec for URLs using comprehensive regex\n  by Diego Perini. Also see:\n\n  * <https://gist.github.com/dperini/729294>\n  * <http://mathiasbynens.be/demo/url-regex>", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [msg]), :arglists ([] [msg]), :arglists-meta (nil nil)}}, :name thi.ng.validate.core/url, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-kanban-demo/9yk/-8010a8/app.out/thi/ng/validate/core.cljs", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [msg]), :arglists ([] [msg]), :arglists-meta (nil nil)}, :method-params ([] [msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 376, :end-line 376, :max-fixed-arity 1, :fn-var true, :arglists ([] [msg]), :doc "Returns validation spec for URLs using comprehensive regex\n  by Diego Perini. Also see:\n\n  * <https://gist.github.com/dperini/729294>\n  * <http://mathiasbynens.be/demo/url-regex>"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:* :single-spec :nested-spec :default :global-spec* :multi-spec :nested-spec* :hierarchy}, :order [:hierarchy :* :global-spec* :single-spec :nested-spec* :nested-spec :multi-spec :default]}, :doc nil}